{
  "id": "{{registry.name}}",
  "cmd": "if [ \"{{registry.listener_protocol}}\" = \"http\" ]; then export SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION=\"\" SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD=\"\" SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION=\"\" SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD=\"\"; fi && export SCHEMA_REGISTRY_LISTENERS={{registry.listener_protocol}}://0.0.0.0:$PORT0 && /etc/confluent/docker/run",
  "instances": {{registry.instances}},
  "cpus": {{registry.cpus}},
  "mem": {{registry.mem}},
  "user": "{{registry.user}}",
  "maintainer": "partner-support@confluent.io",
  "container": {
    "type": "MESOS",
    "docker": {
      "image": "{{resource.assets.container.docker.image}}"
    },
    {{#registry.virtual_network_enabled}}
    "portMappings": [
        {
            "containerPort": 8081,
            "servicePort": 8081,
            "protocol": "tcp",
            "labels": {
              "VIP_0": "{{registry.name}}:8081"
            }
        }
    ],
    {{/registry.virtual_network_enabled}}
    "volumes": [
      {{#registry.keystore_secret}}
      {
          "containerPath": "mykeystore.jks",
          "secret": "mykeystore"
      }
      {{/registry.keystore_secret}}
      {{#kafka.kerberos_enabled}}
      {{#registry.keystore_secret}},{{/registry.keystore_secret}}
      {
          "containerPath": "/tmp/kafka-client.keytab",
          "secret": "kafka_keytab"
      },
      {
          "containerPath": "/tmp/client-jaas.conf",
          "secret": "kafka_jaas"
      },
      {
          "containerPath": "/tmp/krb5.conf",
          "secret": "kafka_krb5"
      }
      {{/kafka.kerberos_enabled}}
    ]
  },
  {{^registry.virtual_network_enabled}}
  "networks": [
    {
      "mode": "host"
    }
  ],
  "portDefinitions": [ {
      "name": "schema-registry",
      "port": 8081,
      "protocol": "tcp",
      "labels": {
        "VIP_0": "{{registry.name}}:8081"
      }
  } ],
  {{/registry.virtual_network_enabled}}
  {{#registry.virtual_network_enabled}}
  "networks": [
    {
      "name": "{{registry.virtual_network_name}}",
      {{^registry.virtual_network_plugin_labels.isEmpty}}
      "labels": {
      {{#registry.virtual_network_plugin_labels}}
          "{{key}}": "{{value}}",
      {{/registry.virtual_network_plugin_labels}}
      "network_name": "{{registry.virtual_network_name}}"
      },
      {{/registry.virtual_network_plugin_labels.isEmpty}}
      "mode": "container"
    }
  ],
  {{/registry.virtual_network_enabled}}
  "secrets": {
    {{#registry.keystore_secret}}
        "mykeystore": {
        "source": "{{registry.keystore_secret}}"
        }
    {{/registry.keystore_secret}}
    {{#kafka.kerberos_enabled}}
    {{#registry.keystore_secret}},{{/registry.keystore_secret}}
        "kafka_keytab": {
        "source": "{{kafka.kerberos_keytab_secret}}"
        },
        "kafka_jaas": {
        "source": "{{kafka.kerberos_jaas_secret}}"
        },
        "kafka_krb5": {
        "source": "{{kafka.kerberos_krb5_secret}}"
        }
    {{/kafka.kerberos_enabled}}
  },
  "env": {
    "SCHEMA_REGISTRY_HEAP_OPTS": "-Xmx{{registry.heap}}M",
    "SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL": "INFO",
    "SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL": "{{kafka.zookeeper_connect}}",
    "SCHEMA_REGISTRY_SCHEMA_REGISTRY_ZK_NAMESPACE": "{{registry.zookeeper_namespace}}",
    "SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS": "{{registry.access-control-allow-methods}}",
    "SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN": "{{registry.access-control-allow-origin}}",
    "SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION": "/tmp/kafka-truststore.jks",
    "SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD": "changeit",
    {{^registry.keystore_secret}}
    "SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION": "/tmp/kafka-keystore.jks",
    {{/registry.keystore_secret}}
    {{#registry.keystore_secret}}
    "SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION": "mykeystore.jks",
    {{/registry.keystore_secret}}
    "SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD": "changeit",
    "SCHEMA_REGISTRY_SSL_KEY_PASSWORD": "changeit",
    "SCHEMA_REGISTRY_SSL_CLIENT_AUTH": "{{registry.ssl_client_auth}}",
    "SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL": "{{kafka.client_security_protocol}}",
    "SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS":"{{kafka.kafkastore-bootstrap-servers}}",
    "SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION": "/tmp/kafka-truststore.jks",
    "SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD": "changeit",
    "SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION": "/tmp/kafka-keystore.jks",
    "SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD": "changeit",
    "SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD": "changeit",
    "SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL": "{{registry.listener_protocol}}",
    "FRAMEWORK_USER": "{{registry.user}}",
    {{#kafka.kerberos_enabled}}
    "KAFKA_OPTS": "-Djava.security.auth.login.config=/tmp/client-jaas.conf -Djava.security.krb5.conf=/tmp/krb5.conf",
    "SCHEMA_REGISTRY_OPTS": "-Djava.security.auth.login.config=/tmp/client-jaas.conf -Djava.security.krb5.conf=/tmp/krb5.conf",
    {{/kafka.kerberos_enabled}}
    "SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM": "{{kafka.client_sasl_mechanism}}",
    {{#registry.virtual_network_enabled}}
    "VIRTUAL_NETWORK_ENABLED": "true",
    "VIRTUAL_NETWORK_NAME": "{{registry.virtual_network_name}}",
    {{^registry.virtual_network_plugin_labels.isEmpty}}
     "VIRTUAL_NETWORK_PLUGIN_LABELS": "{{#registry.virtual_network_plugin_labels}}{{key}}:{{value}},{{/registry.virtual_network_plugin_labels}}",
    {{/registry.virtual_network_plugin_labels.isEmpty}}
     "VIRTUAL_NETWORK_LABELS": "{{registry.virtual_network_name}}",
    {{/registry.virtual_network_enabled}}
    "SCHEMA_REGISTRY_KAFKASTORE_SASL_KERBEROS_SERVICE_NAME": "{{kafka.client_sasl_kerberos_service_name}}",
    "SCHEMA_REGISTRY_SSL_CIPHER_SUITES": "{{registry.ciphers}}",
    "SCHEMA_REGISTRY_KAFKASTORE_SSL_CIPHER_SUITES": "{{registry.ciphers}}"
  },
  "healthChecks": [
    {
        "protocol": "COMMAND",
        "command": { "value": "curl --cert $MESOS_SANDBOX/.ssl/scheduler.crt --key $MESOS_SANDBOX/.ssl/scheduler.key -k -I {{registry.listener_protocol}}://localhost:$PORT0 | grep \"HTTP/1.1 200 OK\"" },
        "gracePeriodSeconds": 180,
        "intervalSeconds": 10,
        "timeoutSeconds": 20,
        "maxConsecutiveFailures": 3
    }
  ],
  "acceptedResourceRoles": [
    "{{registry.role}}"
  ],
  "upgradeStrategy":{
    "minimumHealthCapacity": 0,
    "maximumOverCapacity": 0
  },
  "labels": {
    "DCOS_SERVICE_NAME": "{{registry.name}}",
    "DCOS_SERVICE_SCHEME": "http",
    "DCOS_SERVICE_PORT_INDEX": "0",
    "DCOS_PACKAGE_FRAMEWORK_NAME": "{{registry.name}}"
  }
}

