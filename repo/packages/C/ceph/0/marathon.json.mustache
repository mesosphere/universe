{
    "id": "{{service.name}}",
    "cpus": {{ceph.cpus}},
    "mem": {{ceph.mem}},
    "disk": 0,
    "instances": 1,
    "env": {
        "MESOS_ROLE": "{{service.name}}-role",
        "MESOS_PRINCIPAL": "{{service.name}}-principal",        
        "CLUSTER_NETWORK": "{{networking.cluster_network}}",
        "PUBLIC_NETWORK": "{{networking.public_network}}",
        "ZOOKEEPER": "leader.mesos:2181",
        "API_HOST": "0.0.0.0",
        "MESOS_MASTER": "leader.mesos:5050"        
    },
    "uris": ["https://dl.bintray.com/vivint-smarthome/ceph-on-mesos/ceph-on-mesos-0.2.9.tgz"],
    "cmd": "cd /mnt/mesos/sandbox/ceph-on-mesos-*\nbin/ceph-on-mesos --api-port=$PORT0",
    "container": {
        "type": "DOCKER",
        "docker": {
            "image": "{{resource.assets.container.docker.ceph-docker}}",
            "forcePullImage": false,
            "privileged": false,
            "network": "HOST"
        },
        "volumes": [{
            "containerPath": "/dev/random",
            "hostPath": "/dev/urandom",
            "mode": "RO"
        }]
    },
    "healthChecks": [
        {
            "protocol": "TCP",
            "gracePeriodSeconds": 300,
            "intervalSeconds": 60,
            "timeoutSeconds": 20,
            "maxConsecutiveFailures": 3
        }
    ],
    "portDefinitions": [{
      "protocol": "tcp",
      "port": {{networking.ceph_api_port}},
      {{#networking.external_access.enable}}
      "servicePort": {{networking.external_access.external_access_port}},
      {{/networking.external_access.enable}}
      "labels": {
        "VIP_0": "/{{service.name}}:{{networking.ceph_api_port}}"
      },
      "name": "api"
    }],
    "labels": {
        "MARATHON_SINGLE_INSTANCE_APP": "true",
        "DCOS_PACKAGE_VERSION": "0.2.9-0.1",
        "DCOS_SERVICE_NAME": "{{service.name}}",
        {{#networking.external_access.enable}}
        "HAPROXY_GROUP": "external",
        "HAPROXY_0_VHOST": "{{networking.external_access.virtual_host}}",
        {{/networking.external_access.enable}}        
        "DCOS_PACKAGE_IS_FRAMEWORK": "false"
    },
    "acceptedResourceRoles": [
        "*",
        "slave_public"
    ],
    "upgradeStrategy": {
        "minimumHealthCapacity": 0,
        "maximumOverCapacity": 0
    }
}