{
  "$schema": "http://json-schema.org/schema#",
  "properties": {
    "rest-proxy": {
      "type": "object",
      "description": "Rest proxy service configuration properties",
      "properties": {
        "name": {
          "title": "Rest proxy service name",
          "description": "The name of the rest proxy service instance",
          "type": "string",
          "default": "rest-proxy"
        },
        "listener_protocol": {
          "title": "Rest proxy listener protocol",
          "description": "Rest proxy listener protocol, http or https.",
          "type": "string",
          "default": "http"
        },
        "keystore_secret": {
          "title": "Keystore secret",
          "description": "Keystore secret.",
          "type": "string",
          "default": ""
        },
        "ssl_client_auth": {
          "description": "Used for HTTPS. Whether or not to require the HTTPS client to authenticate via the server's trust store.",
          "type": "boolean",
          "default": false
        },
        "virtual_network_enabled": {
          "description": "Enable virtual networking",
          "type": "boolean",
          "default": false
        },
        "virtual_network_name": {
          "description": "The name of the virtual network to join",
          "type": "string",
          "default": "dcos"
        },
        "virtual_network_plugin_labels": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "default": ""
              },
              "value": {
                "type": "string",
                "default": ""
              }
            }
          },
          "description": "Labels to pass to the virtual network plugin (e.g., [{\"key\": \"key_1\", \"value\": \"value_1\"}, {\"key\": \"key_2\", \"value\": \"value_2\"}])",
          "default": []
        },
        "user": {
          "description": "The user that the service will run as.",
          "type": "string",
          "default": "root",
          "title": "User"
        },
        "instances": {
          "default": 1,
          "description": "Number of instances to run.",
          "minimum": 1,
          "type": "integer"
        },
        "cpus": {
          "default": 2,
          "description": "CPU shares to allocate to each rest-proxy instance.",
          "minimum": 2,
          "type": "number"
        },
        "mem": {
          "default": 1024,
          "description": "Memory (MB) to allocate to each rest-proxy instance.",
          "minimum": 512,
          "type": "number"
        },
        "heap": {
          "default": 768,
          "description": "JVM heap allocation (in MB) for rest-proxy task; should be ~256MB less than total memory for the instance.",
          "minimum": 256,
          "type": "number"
        },
        "role": {
          "default": "*",
          "description": "Deploy rest-proxy only on nodes with this role.",
          "type": "string"
        },
        "access-control-allow-methods": {
          "default": "",
          "description": "Set value to Jetty Access-Control-Allow-Origin header for specified methods",
          "type": "string"
        },
        "access-control-allow-origin": {
          "default": "",
          "description": "Set value for Jetty Access-Control-Allow-Origin header",
          "type": "string"
        },
        "ciphers": {
          "default": "TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_AES_256_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
          "description": "Comma-separated list of JSSE Cipher Suite Names",
          "type": "string"
        }
      },
      "required": [
        "name",
        "cpus",
        "mem",
        "instances"
      ]
    },
    "kafka": {
      "type": "object",
      "description": "Rest proxy kafka service configuration",
      "properties": {
        "bootstrap_servers": {
          "title": "Kafka bootstrap servers",
          "description": "The name of the kafka bootstrapserver. Broker vip (for TLS it is broker-tls.confluent-kafka.l4lb.thisdcos.directory:9093) or comma separated list of broker dns names (like in the kerberos case). Note slahes in a kafka service name have to be removed.",
          "type": "string",
          "default": "broker.confluent-kafka.l4lb.thisdcos.directory:9092"
        },
        "zookeeper_connect": {
          "title": "Zookeeper connect",
          "description": "... . Note slahes in a kafka service name have to be removed, all excpet the first get replaced by two underscores.",
          "type": "string",
          "default": "master.mesos:2181/dcos-service-confluent-kafka"
        },
        "client_security_protocol": {
          "title": "Kafka client security protocol",
          "description": "Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL",
          "type": "string",
          "default": "PLAINTEXT"
        },
        "kerberos_enabled": {
          "description": "Enable kerberos",
          "type": "boolean",
          "default": false
        },
        "client_sasl_mechanism": {
          "title": "Kafka client sasl mechanism",
          "description": "SASL mechanism used for client connections. This may be any mechanism for which a security provider is available. GSSAPI is the default mechanism.",
          "type": "string",
          "default": "GSSAPI"
        },
        "client_sasl_kerberos_service_name": {
          "title": "Kafka client sasl kerberos service name",
          "description": "The Kerberos principal name that Kafka runs as. This can be defined either in Kafka's JAAS config or in Kafka's config.",
          "type": "string",
          "default": "kafka"
        },
        "kerberos_keytab_secret": {
          "title": "Kerberos keytab secret",
          "description": "Kerberos keytab secret containing keytab",
          "type": "string",
          "default": "__dcos_base64___keytab"
        },
        "kerberos_jaas_secret": {
          "title": "Kerberos jaas secret",
          "description": "Kerberos jaas secret containing jaas config",
          "type": "string",
          "default": "jaas"
        },
        "kerberos_krb5_secret": {
          "title": "Kerberos krb5 secret",
          "description": "Kerberos krb5 secret containing krb5 config",
          "type": "string",
          "default": "krb5"
        }
      },
      "required": [
        "bootstrap_servers",
        "zookeeper_connect"
      ]
    },
    "schema-registry": {
      "type": "object",
      "description": "Rest proxy schema registry configuration",
      "properties": {
        "url": {
          "title": "Schema registry url",
          "description": "The base URL for the schema registry that should be used by the Avro serializer.",
          "type": "string",
          "default": "http://schema-registry.marathon.l4lb.thisdcos.directory:8081"
        }
      },
      "required": [
        "url"
      ]
    }
  },
  "type": "object"
}
