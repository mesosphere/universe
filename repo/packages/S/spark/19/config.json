{
    "type": "object",
    "properties": {
        "service": {
            "description": "DCOS Spark configuration properties",
            "type": "object",
            "properties": {
                "name": {
                    "default": "spark",
                    "description": "The Spark Dispatcher will register with Mesos with this as a framework name.  This service will be available at http://<dcos_url>/service/<name>/",
                    "type": "string"
                },
                "cpus": {
                    "default": 1,
                    "description": "CPU shares",
                    "minimum": 0.0,
                    "type": "number"
                },
                "mem": {
                    "default": 1024.0,
                    "description": "Memory (MB)",
                    "minimum": 1024.0,
                    "type": "number"
                },
                "role": {
                    "description": "The Spark Dispatcher will register with Mesos with this role.",
                    "type": "string",
                    "default": "*"
                },
                "principal": {
                    "description": "The Spark Dispatcher will register with Mesos with this principal.",
                    "type": "string",
                    "default": ""
                },
                "secret": {
                    "description": "The Spark Dispatcher will register with mesos with this secret.",
                    "type": "string",
                    "default": ""
                },
                "user": {
                    "description": "Executors will run as this user.",
                    "type": "string",
                    "default": "root"
                },
                "spark-dist-uri": {
                    "type": "string",
                    "description": "Spark distribution URI.  The DCOS Spark CLI will fetch this Spark distribution.  This variable has no effect on the Spark distribution running the dispatcher or the drivers.  The Docker image running this Marathon app contains that distribution.",
                    "default": "https://downloads.mesosphere.com/spark/assets/spark-2.0.1.tgz"
                },
                "log-level": {
                    "type": "string",
                    "description": "log4j log level for The Spark Dispatcher.  May be set to any valid log4j log level: https://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/Level.html",
                    "default": "INFO"
                }
            }
        },
        "history-server": {
            "description": "History Server configuration properties",
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "Set to true to enable the Spark history server.",
                    "type": "boolean",
                    "default": false
                },
                "log-dir": {
                    "description": "Base directory in which Spark events are logged if spark.history-server.enabled is set to true. Users may want to set this to a unified location like an HDFS directory so history files can be read by the history server. Note that this directory must exist prior to installing the Spark package.",
                    "type": "string",
                    "default": "hdfs://hdfs/history"
                },
                "cleaner-enabled": {
                    "description": "Specifies whether the History Server should periodically clean up event logs from storage.",
                    "type": "boolean",
                    "default": false
                },
                "cleaner-interval": {
                    "default": "1d",
                    "description": "How often the job history cleaner checks for files to delete. Files are only deleted if they are older than spark.history-server.cleaner-maxage.",
                    "type": "string"
                },
                "cleaner-maxage": {
                    "default": "7d",
                    "description": "Job history files older than this will be deleted when the history cleaner runs.",
                    "type": "string"
                },
                "kerberos": {
                    "type": "object",
                    "description": "History Server Kerberos configuration properties.",
                    "properties": {
                        "principal": {
                            "description": "Kerberos principal used by the history server.",
                            "default": "",
                            "type": "string"
                        },
                        "keytab": {
                            "description": "Base64 encoded keytab for the history server.  This contains secrets.  Ensure you have SSL enabled before transmitting this data.",
                            "default": "",
                            "type": "string"
                        }
                    }
                }
            }
        },
        "security": {
            "description": "Spark security configuration properties",
            "type": "object",
            "properties": {
                "kerberos": {
                    "description": "Spark Kerberos configuration.",
                    "type": "object",
                    "properties": {
                        "krb5conf": {
                            "description": "Base64 encoded krb5.conf file.  Copied to the drivers and executors so that they may access your KDC.  Also used by the history server.",
                            "type": "string",
                            "default": ""
                        }
                    }
                },
                "mesos": {
                    "description": "Mesos scheduler configuration properties.",
                    "type": "object",
                    "properties": {
                        "authentication": {
                            "description": "Mesos scheduler dcos-oauth configuration.",
                            "type": "object",
                            "properties": {
                                "secret_name": {
                                    "description": "Name of the secret used to authenticate with the Mesos Master.",
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "ssl": {
                    "description": "Spark SSL certificates and private key configuration.",
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "default": false,
                            "description": "Set to true to enable SSL.",
                            "type": "boolean"
                        },
                        "keyStoreBase64": {
                            "default": "",
                            "description": "Base64 encoded blob containing a Java keystore.",
                            "type": "string"
                        },
                        "trustStoreBase64": {
                            "default": "",
                            "description": "Base64 encoded blob containing a Java truststore.",
                            "type": "string"
                        },
                        "keyPassword": {
                            "default": "",
                            "description": "An optional password for the private key in the keystore.",
                            "type": "string"
                        },
                        "keyStorePassword": {
                            "default": "",
                            "description": "An optional password for the keystore (and the key if keyPassword is not given).",
                            "type": "string"
                        },
                        "trustStorePassword": {
                            "default": "",
                            "description": "An optional password for the truststore.",
                            "type": "string"
                        },
                        "protocol": {
                            "default": "TLSv1.2",
                            "description": "The TLS version to offer.",
                            "type": "string"
                        },
                        "enabledAlgorithms": {
                            "default": "SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA,SSL_DH_anon_WITH_3DES_EDE_CBC_SHA,SSL_DH_anon_WITH_DES_CBC_SHA,SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA,SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA,SSL_DHE_DSS_WITH_DES_CBC_SHA,SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA,SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA,SSL_DHE_RSA_WITH_DES_CBC_SHA,SSL_RSA_EXPORT_WITH_DES40_CBC_SHA,SSL_RSA_WITH_3DES_EDE_CBC_SHA,SSL_RSA_WITH_DES_CBC_SHA,SSL_RSA_WITH_NULL_MD5,SSL_RSA_WITH_NULL_SHA,TLS_DH_anon_WITH_AES_128_CBC_SHA,TLS_DH_anon_WITH_AES_128_CBC_SHA256,TLS_DH_anon_WITH_AES_128_GCM_SHA256,TLS_DH_anon_WITH_AES_256_CBC_SHA,TLS_DH_anon_WITH_AES_256_CBC_SHA256,TLS_DH_anon_WITH_AES_256_GCM_SHA384,TLS_DHE_DSS_WITH_AES_128_CBC_SHA,TLS_DHE_DSS_WITH_AES_128_CBC_SHA256,TLS_DHE_DSS_WITH_AES_128_GCM_SHA256,TLS_DHE_DSS_WITH_AES_256_CBC_SHA,TLS_DHE_DSS_WITH_AES_256_CBC_SHA256,TLS_DHE_DSS_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA256,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA,TLS_ECDH_anon_WITH_AES_128_CBC_SHA,TLS_ECDH_anon_WITH_AES_256_CBC_SHA,TLS_ECDH_anon_WITH_NULL_SHA,TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDH_ECDSA_WITH_NULL_SHA,TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_RSA_WITH_AES_256_CBC_SHA,TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDH_RSA_WITH_NULL_SHA,TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_NULL_SHA,TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_NULL_SHA,TLS_EMPTY_RENEGOTIATION_INFO_SCSV,TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5,TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA,TLS_KRB5_WITH_3DES_EDE_CBC_MD5,TLS_KRB5_WITH_3DES_EDE_CBC_SHA,TLS_KRB5_WITH_DES_CBC_MD5,TLS_KRB5_WITH_DES_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_NULL_SHA256",
                            "description": "A comma-separared list of allowed ciphers.",
                            "type": "string"
                        }
                    }
                }
            }
        },
        "hdfs": {
            "description": "Spark-HDFS configuration properties",
            "type": "object",
            "properties": {
                "config-url": {
                    "type": "string",
                    "description": "Base URL that serves HDFS config files (hdfs-site.xml, core-site.xml).  If not set, DCOS Spark will use its default configuration and read from DCOS HDFS."
                }
            }
        }
    }
}
