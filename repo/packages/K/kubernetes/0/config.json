{
  "properties": {
    "kubernetes": {
      "description": "Kubernetes specific configuration properties",
      "properties": {
        "dns-suffix": {
          "default": ".marathon.mesos",
          "description": "This value is appended to the framework-name value to form the canonical DNS name for the Kubernetes components.",
          "type": "string",
          "pattern": "^(?:\\.[a-z][a-z0-9]*?(?:-[a-z0-9]+)*)+$"
        },
        "enable-dns": {
          "default": true,
          "description": "Set to true to enable Kubernetes local DNS services, allows pods to locate services by name.",
          "type": "boolean"
        },
        "enable-deployments": {
          "default": false,
          "description": "Enable deployment experimental feature, not ready for production use.",
          "type": "boolean"
        },
        "enable-daemonsets": {
          "default": false,
          "description": "Enable daemonset experimental feature, not ready for production use.",
          "type": "boolean"
        },
        "etcd-mesos-framework-name": {
          "default": "disabled",
          "description": "Which etcd-mesos framework to rely on. Corresponds to the configured framework-name for an etcd-mesos framework. Set this to disabled to use a local etcd instance in the scheduler container.",
          "type": "string",
          "pattern": "^/?(([a-z0-9]|[a-z0-9][a-z0-9\\-]*[a-z0-9])\\.)*([a-z0-9]|[a-z0-9][a-z0-9\\-]*[a-z0-9])$"
        },
        "framework-name": {
          "default": "kubernetes",
          "description": "The framework name to register with Mesos.",
          "type": "string",
          "pattern": "^/?(([a-z0-9]|[a-z0-9][a-z0-9\\-]*[a-z0-9])\\.)*([a-z0-9]|[a-z0-9][a-z0-9\\-]*[a-z0-9])$"
        },
        "kube-dns-domain": {
          "default": "cluster.local",
          "description": "Domain used by pods for Kubernetes service lookup.",
          "type": "string",
          "pattern": "^(?:[a-z][a-z0-9]*?(?:-[a-z0-9]+)*?\\.)?(?:[a-z][a-z0-9]*?(?:-[a-z0-9]+)*)$"
        },
        "kube-dns-service-ip": {
          "default": "10.10.10.10",
          "description": "Kubernetes DNS service portal IP address, should fall in service-cluster-ip-range network range.",
          "type": "string",
          "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
        },
        "kube-dns-replicas": {
          "default": 1,
          "description": "The number of kube-dns pods that Kubernetes will spin up at deploy time.",
          "minimum": 1,
          "type": "integer"
        },
        "kube-dns-nameservers": {
          "description": "Comma-delimited list of host:ip entries that point to fallback nameservers. Only used if nameservers cannot be extracted from the slave's /etc/resolv.conf",
          "type": "string",
          "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?):(6553[0-5]|655[0-2][0-9]\\d|65[0-4](\\d){2}|6[0-4](\\d){3}|[1-5](\\d){4}|[1-9](\\d){0,3})(?:,(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?):(6553[0-5]|655[0-2][0-9]\\d|65[0-4](\\d){2}|6[0-4](\\d){3}|[1-5](\\d){4}|[1-9](\\d){0,3}))*$"
        },
        "service-cluster-ip-range": {
          "default": "10.10.10.0/24",
          "description": "Kubernetes DNS service portal IP address, should fall in service-cluster-ip-range network range.",
          "type": "string",
          "pattern": "^(?:(?:[0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}(?:[0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(?:\\/(?:[0-9]|[1-2][0-9]|3[0-2]))$"
        },
        "service-node-port-range": {
          "description": "A port range to reserve for services with NodePort visibility. Example: '30000-32767'. Inclusive at both ends of the range.",
          "type": "string",
          "pattern": "^((?:6553[0-5]|655[0-2]\\d|65[0-4]\\d{2}|6[0-4]\\d{3}|[1-5]\\d{4}|[1-9]\\d{0,3})-(?:6553[0-5]|655[0-2]\\d|65[0-4]\\d{2}|6[0-4]\\d{3}|[1-5]\\d{4}|[1-9]\\d{0,3})|)$"
        },
        "scheduler-service-ip": {
          "default": "10.10.10.9",
          "description": "Kubernetes-Mesos scheduler service portal IP address, should fall in service-cluster-ip-range network range.",
          "type": "string",
          "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
        },
        "cpus": {
          "default": 1.0,
          "description": "CPU shares to allocate to each instance.",
          "minimum": 0.0,
          "type": "number"
        },
        "failover-timeout": {
          "default": 604800,
          "description": "The failover_timeout for Mesos in seconds. If a new Kubernetes scheduler instance has not re-registered with Mesos this long after a failover, Mesos will shut down all running pods. Requires checkpointing to be enabled.",
          "minimum": 0,
          "type": "integer"
        },
        "apiserver-port": {
          "default": 25503,
          "description": "Read/write host port that the Kubernetes apiserver listens on.",
          "minimum": 1,
          "maximum": 65535,
          "type": "integer"
        },
        "apiserver-proxy-port": {
          "default": 25500,
          "description": "Read/write host port that the Kubernetes nginx proxy in front of the apiserver listens on.",
          "minimum": 1,
          "maximum": 65535,
          "type": "integer"
        },
        "apiserver-secure-port": {
          "default": 25502,
          "description": "The Kubernetes apiserver port from which to serve HTTPS with authentication and authorization.",
          "minimum": 1,
          "maximum": 65535,
          "type": "integer"
        },
        "scheduler-driver-port": {
          "default": 25501,
          "description": "Host port that the Kubernetes-Mesos scheduler driver listens on.",
          "minimum": 1,
          "maximum": 65535,
          "type": "integer"
        },
        "scheduler-port": {
          "default": 25504,
          "description": "Host port that the Kubernetes scheduler listens on.",
          "minimum": 1,
          "maximum": 65535,
          "type": "integer"
        },
        "controller-manager-port": {
          "default": 25505,
          "description": "Host port that the Kubernetes controller-manager listens on.",
          "minimum": 1,
          "maximum": 65535,
          "type": "integer"
        },
        "instances": {
          "default": 1,
          "description": "Number of Kubernetes scheduler instances to run.",
          "minimum": 0,
          "maximum": 1,
          "type": "integer"
        },
        "logging-verbosity": {
          "default": 1,
          "description": "Increase this value to obtain more detailed log messages.",
          "type": "integer",
          "minimum": 0
        },
        "mem": {
          "default": 768.0,
          "description": "Memory (MB) to allocate to each Kubernetes scheduler instance.",
          "minimum": 128.0,
          "type": "number"
        },
        "default-container-cpu-limit": {
          "default": 0.25,
          "description": "CPU shared to allocate to a container in a pod which is not CPU limited.",
          "minimum": 0.01,
          "type": "number"
        },
        "default-container-mem-limit": {
          "default": 64.0,
          "description": "Memory (MB) to allocate to a container in a pod which is not memory limited.",
          "minimum": 32.0,
          "type": "number"
        },
        "initial-executor-cpus": {
          "default": 0.25,
          "description": "Initial CPU shares allocated for the executor container.",
          "minimum": 0.01,
          "type": "number"
        },
        "initial-executor-mem": {
          "default": 128.0,
          "description": "Initial memory (MB) allocated for the executor container.",
          "minimum": 128.0,
          "type": "number"
        },
        "framework-roles": {
          "default": "*,slave_public",
          "description": "Mesos framework roles that the scheduler receives offers for. Currently only * and optionally one additional role are supported.",
          "type": "string",
          "pattern": "^([\\w*]+)(,[\\w*]+)*$"
        },
        "default-pod-roles": {
          "default": "*",
          "description": "Roles that will be used to launch pods having no k8s.mesosphere.io/roles label.",
          "type": "string",
          "pattern": "^([\\w*]+)(,[\\w*]+)*$"
        },
        "uris": {
          "default": [],
          "description": "List of URIs that will be download and made available in the current working directory of the scheduler.",
          "items": {
            "pattern": "^[^\\s]+",
            "type": "string"
          },
          "type": "array"
        },
        "debug": {
          "default": false,
          "description": "Enable debug output",
          "type": "boolean"
        },
        "generate-task-discovery": {
          "default": false,
          "description": "Generate Mesos task discovery information to be used by systems like mesos-dns.",
          "type": "boolean"
        },
        "proxy-mode": {
          "default": "userspace",
          "description": "Which proxy mode to use: 'userspace' (older) or 'iptables' (faster). If the iptables proxy is selected, regardless of how, but the system's kernel or iptables versions are insufficient, this always falls back to the userspace proxy.",
          "type": "string",
          "pattern": "^(userspace|iptables)$"
        },
        "pki": {
          "description": "Kubernetes certificates and private key configuration.",
          "properties": {
            "apiserver-crt": {
              "default": "disabled",
              "description": "Base64 encoded blob containing a x509 Certificate for HTTPS. (CA cert, if any, concatenated after server cert).",
              "type": "string"
            },
            "apiserver-key": {
              "default": "disabled",
              "description": "Base64 encoded blob containing a x509 private key matching apiserver-crt.",
              "type": "string"
            },
            "root-ca-crt": {
              "default": "disabled",
              "description": "Base64 encoded blob containing the root certificate authority that will be included in service account's token secret. This must be a valid PEM-encoded CA bundle.",
              "type": "string"
            },
            "service-accounts-key": {
              "default": "disabled",
              "description": "Base64 encoded blob containing a PEM-encoded private RSA key used to sign service account tokens.",
              "type": "string"
            }
          },
          "required": [ "root-ca-crt", "apiserver-crt", "apiserver-key", "service-accounts-key" ],
          "type": "object"
        }
      },
      "required": [
        "enable-deployments",
        "enable-daemonsets",
        "etcd-mesos-framework-name",
        "framework-name",
        "cpus",
        "dns-suffix",
        "instances",
        "failover-timeout",
        "logging-verbosity",
        "mem",
        "uris"
      ],
      "type": "object"
    },
    "marathon": {
      "description": "Marathon specific configuration properties",
      "properties": {
        "resource-roles": {
          "default": "*",
          "description": "comma seperated string of acceptable Mesos resource roles to consider when scheduling the Kubernetes Marathon container. Set to 'slave_public' to force running Kubernetes on a public slave.",
          "type": "string"
        }
      },
      "required": ["resource-roles"],
      "type": "object"
    },
    "mesos": {
      "description": "Mesos specific configuration properties",
      "properties": {
        "master": {
          "default": "zk://master.mesos:2181/mesos",
          "description": "The URL of the Mesos master. The format is a comma-delimited list of hosts like zk://host1:port,host2:port/mesos. If using ZooKeeper, pay particular attention to the leading zk:// and trailing /mesos! If not using ZooKeeper, standard host:port patterns, like localhost:5050 or 10.0.0.5:5050,10.0.0.6:5050, are also acceptable.",
          "type": "string"
        }
      },
      "required": ["master"],
      "type": "object"
    }
  },
  "required": [
    "kubernetes",
    "marathon",
    "mesos"
  ],
  "type": "object"
}
