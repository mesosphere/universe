{
  "type": "object",
  "properties": {
    "service": {
      "type": "object",
      "description": "DC/OS service configuration properties",
      "properties": {
        "name": {
          "title": "Service name",
          "description": "The name of the service instance. The name must contain only alphanumeric characters, underscores and dashes up to a maximum of 24 characters, and must start and end with an alphanumeric character).",
          "type": "string",
          "default": "kubernetes-cluster"
        },
        "region": {
          "description": "The Kubernetes cluster will run in this region. When no region is specified the cluster is constrained to the local region.",
          "type": "string",
          "default": "",
          "media": {
            "type": "application/x-region+string"
          }
        },
        "sleep": {
          "description": "The sleep duration in seconds before tasks exit.",
          "type": "number",
          "default": 1000
        },
        "service_account": {
          "description": "The service account for DC/OS service authentication. This is typically left empty to use the default unless service authentication is needed. The value given here is passed as the principal of the Mesos framework.",
          "type": "string",
          "default": ""
        },
        "service_account_secret": {
          "title": "Credential secret name (optional)",
          "description": "Name of the Secret Store credentials to use for DC/OS service authentication. This should be left empty unless service authentication is needed.",
          "type": "string",
          "default": ""
        },
        "virtual_network_name": {
          "description": "The name of the DC/OS virtual network to use.",
          "type": "string",
          "default": "dcos"
        },
        "log_level": {
          "description": "The log level for the DC/OS service.",
          "type": "string",
          "enum": [
            "OFF",
            "FATAL",
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "TRACE",
            "ALL"
          ],
          "default": "INFO"
        },
        "use_agent_docker_certs": {
          "type": "boolean",
          "default": false,
          "title": "Use the agent's Docker certificates",
          "description": "Whether to use the agent's Docker certificates in order to access private Docker registries."
        }
      }
    },
    "kubernetes": {
      "description": "Kubernetes general properties",
      "type": "object",
      "properties": {
        "authorization_mode": {
          "description": "The authorization mode to use.",
          "type": "string",
          "enum": [
            "AlwaysAllow",
            "RBAC"
          ],
          "default": "AlwaysAllow"
        },
        "high_availability": {
          "type": "boolean",
          "default": false,
          "title": "High-availability",
          "description": "Whether to deploy a highly-available control plane."
        },
        "service_cidr": {
          "title": "Service CIDR",
          "description": "Kubernetes Service CIDR block, e.g. '10.100.0.0/16'. It MUST NOT overlap with DC/OS VIP CIDR block.",
          "type": "string",
          "default": "10.100.0.0/16",
          "pattern": "^(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(\\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])){3}/([12]?[0-9]|3[0-2])$"
        },
        "dcos_token_authentication": {
          "type": "boolean",
          "default": false,
          "title": "DC/OS token authentication",
          "description": "Whether to enable DC/OS token authentication."
        },
        "control_plane_reserved_resources": {
          "type": "object",
          "description": "Reserved resources for Kubernetes control plane.",
          "properties": {
            "cpus": {
              "title": "CPU count",
              "description": "The CPU required by every instance of the control plane.",
              "type": "number",
              "default": 1.5
            },
            "mem": {
              "title": "Memory size (MB)",
              "description": "The RAM required by every instance of the control plane.",
              "type": "integer",
              "default": 4096
            },
            "disk": {
              "title": "Control Plane Disk size (MB)",
              "description": "Amount of persistent disk available for the control plane docker instance (in MB)",
              "type": "integer",
              "default": 10240
            }
          }
        },
        "control_plane_placement": {
          "type": "string",
          "description": "Control Plane node placement constraints (e.g., [[\"hostname\", \"UNIQUE\"]]).",
          "default": "[[\"hostname\", \"UNIQUE\"]]",
          "media": {
            "type": "application/x-zone-constraints+json"
          }
        },
        "private_node_count": {
          "title": "Private Node Count",
          "description": "Number of desired private Kubernetes nodes.",
          "type": "integer",
          "default": 1,
          "minimum": 1
        },
        "private_reserved_resources": {
          "type": "object",
          "description": "Reserved resources for Kubernetes private nodes",
          "properties": {
            "kube_cpus": {
              "title": "Node CPU available for pods",
              "description": "Amount of CPU resources available for pods.",
              "type": "number",
              "default": 2
            },
            "kube_mem": {
              "title": "Node RAM memory available for pods (in MB)",
              "description": "Amount of memory RAM resources available for pods (in MB).",
              "type": "integer",
              "default": 2048
            },
            "kube_disk": {
              "title": "Node Disk size (MB)",
              "description": "Amount of persistent disk available for pods (in MB)",
              "type": "integer",
              "default": 10240
            },
            "system_cpus": {
              "title": "Kube-reserved CPU count",
              "description": "CPU reserved for kubelet and container runtime daemons.",
              "type": "number",
              "default": 1,
              "minimum": 1
            },
            "system_mem": {
              "title": "Kube-reserved RAM memory (in MB)",
              "description": "RAM memory reserved for kubelet and container runtime daemons (in MB).",
              "type": "integer",
              "default": 1024,
              "minimum": 1024
            }
          }
        },
        "private_node_placement": {
          "type": "string",
          "description": "Private Kubernetes node placement constraints (e.g., [[\"hostname\", \"UNIQUE\"]]).",
          "default": "",
          "media": {
            "type": "application/x-zone-constraints+json"
          }
        },
        "public_node_count": {
          "title": "Public Node Count",
          "description": "Number of desired public Kubernetes nodes.",
          "type": "integer",
          "default": 0
        },
        "public_reserved_resources": {
          "type": "object",
          "description": "Reserved resources for Kubernetes public nodes",
          "properties": {
            "kube_cpus": {
              "title": "Node CPU available for pods",
              "description": "Amount of CPU resources available for pods.",
              "type": "number",
              "default": 0.5
            },
            "kube_mem": {
              "title": "Node RAM memory available for pods (in MB)",
              "description": "Amount of memory RAM resources available for pods (in MB).",
              "type": "integer",
              "default": 512
            },
            "kube_disk": {
              "title": "Node Disk size (MB)",
              "description": "Amount of persistent disk available for pods (in MB)",
              "type": "integer",
              "default": 2048
            },
            "system_cpus": {
              "title": "Kube-reserved CPU count",
              "description": "CPU reserved for kubelet and container runtime daemons.",
              "type": "number",
              "default": 1,
              "minimum": 1
            },
            "system_mem": {
              "title": "Kube-reserved RAM memory (in MB)",
              "description": "RAM memory reserved for kubelet and container runtime daemons (in MB).",
              "type": "integer",
              "default": 1024,
              "minimum": 1024
            }
          }
        },
        "public_node_placement": {
          "type": "string",
          "description": "Public Kubernetes node placement constraints (e.g., [[\"hostname\", \"UNIQUE\"]]).",
          "default": "",
          "media": {
            "type": "application/x-zone-constraints+json"
          }
        }
      }
    },
    "calico": {
      "title": "Calico configuration",
      "description": "Calico provides secure network connectivity for containers and virtual machine workloads.",
      "type": "object",
      "properties": {
        "calico_ipv4pool_cidr": {
          "description": "When using Calico IPAM, each workload is assigned an address from the selection of configured IP pools. You may want to modify the IP pool of a running cluster.",
          "type": "string",
          "default": "192.168.0.0/16"
        },
        "cni_mtu": {
          "description": "Typically the MTU for your kubernetes workload interfaces should match the network MTU. If you need IP-in-IP then the MTU size for both the workload and tunnel interfaces should be 20 bytes less than the network MTU for your network. This is due to the extra 20 byte header that the tunnel will add to each packet.",
          "type": "integer",
          "default": 1400
        },
        "ip_autodetection_method": {
          "description": "Each Kubernetes node must be configured with an IPv4 address that has access to the virtual network (as defined in option \"virtual_network_name\" above) . Calico will autodetect these IP addresses based on the method defined here. For more information, please refer to the official documentation at docs.projectcalico.org/v3.2/reference/node/configuration#ip-autodetection-methods.",
          "type": "string",
          "default": "can-reach=9.0.0.0"
        },
        "ipv4pool_ipip": {
          "description": "Calico can be configured to use IP-in-IP encapsulation by enabling the IPIP option on the IP pool resource. When enabled, Calico will use IP-in-IP encapsulation when routing packets to workload IPs falling in the IP pool range.",
          "type": "string",
          "enum": [
            "Always",
            "CrossSubnet",
            "Off"
          ],
          "default": "Always"
        },
        "felix_ipinipmtu": {
          "description": "The MTU Calico sets on the tunnel device created in the kube-node task.",
          "type": "integer",
          "default": 1420
        },
        "felix_ipinipenabled": {
          "description": "Whether Calico should configure an IPinIP interface on the kube-node.",
          "type": "boolean",
          "default": true
        },
        "typha": {
          "title": "Typha configuration",
          "description": "Typha sits in between Felix and the Kubernetes API server, reducing Calico's load on the API server. Recommended when deploying Kubernetes cluster with more than 50 nodes.",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Whether to enable Calico Typha deployment. Recommended when deploying Kubernetes cluster with more than 50 nodes.",
              "type": "boolean",
              "default": false
            },
            "replicas": {
              "description": "Number of Typha replicas. We recommend using Typha if you have more than 50 nodes. Above 100 nodes it is essential. Use one replica for every 100-200 nodes. In production, we recommend running at least 3 replicas to reduce the impact of rolling upgrade.",
              "type": "integer",
              "default": 3,
              "minimum": 1
            }
          }
        }
      }
    },
    "etcd": {
      "description": "etcd properties",
      "type": "object",
      "properties": {
        "cpus": {
          "title": "CPU count",
          "description": "etcd node CPU requirements.",
          "type": "number",
          "default": 0.5
        },
        "mem": {
          "title": "Memory size (MB)",
          "description": "etcd node RAM requirements (in MB).",
          "type": "integer",
          "default": 1024
        },
        "data_disk": {
          "title": "Disk size (MB) for data",
          "description": "etcd node persistent disk requirements (in MB) for the data",
          "type": "integer",
          "default": 3072
        },
        "wal_disk": {
          "title": "Disk size (MB) for logs",
          "description": "etcd node persistent disk requirements (in MB) for the logs",
          "type": "integer",
          "default": 512
        },
        "disk_type": {
          "title": "Disk type [ROOT, MOUNT]",
          "description": "Mount volumes require pre-configuration in DC/OS.",
          "type": "string",
          "enum": [
            "ROOT",
            "MOUNT"
          ],
          "default": "ROOT"
        }
      }
    }
  }
}
