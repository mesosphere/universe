{
  "id": "{{service.name}}",
  "instances": 1,
  "cpus": {{service.cpus}},
  {{#service.gpu_support.enabled}}
  "gpus": {{service.gpu_support.gpus}},
  {{/service.gpu_support.enabled}}
  "mem": {{service.mem}},
  "user": "{{service.user}}",
  "cmd": "{{service.cmd}}",

  "container": {
    "type": "MESOS",
    "volumes": [
      {
        "external": {
          "provider": "dvdi",
          "name": "{{storage.persistence.portworx_volume_name}}",
          "size": {{storage.persistence.portworx_volume_size}},
          "options": {
            "dvdi/driver": "pxd",
            "dvdi/repl": "{{storage.persistence.portworx_volume_replication_factor}}"
          }
        },
        "mode": "RW",
        "containerPath": "data"
      }
    ],
    "docker": {
      {{#service.gpu_support.enabled}}
      "image": "{{resource.assets.container.docker.jupyter-docker-gpu}}",
      {{/service.gpu_support.enabled}}
      {{^service.gpu_support.enabled}}
      "image": "{{resource.assets.container.docker.jupyter-docker}}",
      {{/service.gpu_support.enabled}}
      "forcePullImage": {{service.force_pull}}
    }
    {{#networking.cni_support.enabled}}
    ,
    "portMappings": [
        {
          "containerPort": 8080,
          "protocol": "tcp",
          "name": "notebook",
          "labels": {
            "VIP_0": "{{service.name}}:8888"
          }
        },
        {
          "containerPort": 7077,
          "protocol": "tcp",
          "name": "sparkdriver",
          "labels": {
            "VIP_1": "{{service.name}}:7077"
          }
        },
        {
          "containerPort": 4040,
          "protocol": "tcp",
          "name": "sparkui",
          "labels": {
            "VIP_2": "{{service.name}}:4040"
          }
        },
        {
          "containerPort": 6046,
          "protocol": "tcp",
          "name": "tfdbg",
          "labels": {
            "VIP_3": "{{service.name}}:6046"
          }
        },
        {
          "containerPort": 8786,
          "protocol": "tcp",
          "name": "daskscheduler",
          "labels": {
            "VIP_4": "{{service.name}}:8786"
          }
        },
        {
          "containerPort": 8787,
          "protocol": "tcp",
          "name": "daskboard",
          "labels": {
            "VIP_5": "{{service.name}}:8787"
          }
        },
        {
          "containerPort": 6379,
          "protocol": "tcp",
          "name": "rayredis",
          "labels": {
            "VIP_6": "{{service.name}}:6379"
          }
        },
        {
          "containerPort": 8076,
          "protocol": "tcp",
          "name": "rayobjectmanager",
          "labels": {
            "VIP_7": "{{service.name}}:8076"
          }
        },
        {
          "containerPort": 18080,
          "protocol": "tcp",
          "name": "sparkhistory",
          "labels": {
            "VIP_8": "{{service.name}}:18080"
          }
        }
    ]
  {{/networking.cni_support.enabled}}
  },
  {{#networking.cni_support.enabled}}
  "networks": [
      {
        "mode": "container",
        "name": "dcos"
      }
  ],
  {{/networking.cni_support.enabled}}
 {{^networking.cni_support.enabled}}
   "portDefinitions": [
      {
        "port": 0,
        "protocol": "tcp",
        "name": "notebook",
        "labels": {
          "VIP_0": "{{service.name}}:8888"
        }
      },
      {
        "port": 0,
        "protocol": "tcp",
        "name": "sparkdriver",
        "labels": {
          "VIP_1": "{{service.name}}:7077"
        }
      },
      {
        "port": 0,
        "protocol": "tcp",
        "name": "sparkui",
        "labels": {
          "VIP_2": "{{service.name}}:4040"
        }
      },
      {
        "port": 0,
        "protocol": "tcp",
        "name": "sparkblockmanager"
      },
      {
        "port": 0,
        "protocol": "tcp",
        "name": "tfdbg",
        "labels": {
          "VIP_3": "{{service.name}}:6046"
        }
      },
      {
        "port": 0,
        "protocol": "tcp",
        "name": "daskscheduler",
        "labels": {
          "VIP_4": "{{service.name}}:8786"
        }
      },
      {
        "port": 0,
        "protocol": "tcp",
        "name": "daskboard",
        "labels": {
          "VIP_5": "{{service.name}}:8787"
        }
      },
      {
        "port": 0,
        "protocol": "tcp",
        "name": "rayredis",
        "labels": {
          "VIP_6": "{{service.name}}:6379"
        }
      },
      {
        "port": 0,
        "protocol": "tcp",
        "name": "rayobjectmanager",
        "labels": {
          "VIP_7": "{{service.name}}:8076"
        }
      },
      {
        "port": 0,
        "protocol": "tcp",
        "name": "sparkhistory",
        "labels": {
          "VIP_7": "{{service.name}}:18080"
        }
      }
    ],
  {{/networking.cni_support.enabled}}
  {{#environment.secrets}}
  "secrets": {
    "serviceCredential": {
      "source": "{{environment.service_credential}}"
    }
  },
  {{/environment.secrets}}
  "env": {
    {{#environment.secrets}}
    "DCOS_SERVICE_ACCOUNT_CREDENTIAL": {
      "secret": "serviceCredential"
    },
    {{/environment.secrets}}
    "AWS_REGION": "{{s3.aws_region}}",
    "CONDA_ENVS_PATH": "{{environment.conda_envs_path}}",
    "CONDA_PKGS_DIRS": "{{environment.conda_pkgs_dir}}",
    "DCOS_DIR": "{{environment.dcos_dir}}",
    "ENABLE_SPARK_MONITOR": "{{spark.enable_spark_monitor}}",
    "HADOOP_CONF_DIR": "{{environment.hadoop_conf_dir}}",
    "HOME": "{{environment.home}}",
    "JAVA_OPTS": "{{environment.java_opts}}",

    {{#environment.jupyter_conf_urls}}
    "JUPYTER_CONF_URLS": "{{environment.jupyter_conf_urls}}",
    {{/environment.jupyter_conf_urls}}

    "JUPYTER_CONFIG_DIR": "{{environment.jupyter_config_dir}}",
    "JUPYTER_PASSWORD": "{{environment.jupyter_password}}",
    "JUPYTER_RUNTIME_DIR": "{{environment.jupyter_runtime_dir}}",
    "NGINX_LOG_LEVEL": "{{environment.nginx_log_level}}",
    {{#oidc.enable_oidc}}
    "OIDC_DISCOVERY_URI": "{{oidc.oidc_discovery_uri}}",
    "OIDC_REDIRECT_URI": "/service{{service.name}}{{oidc.oidc_redirect_uri}}",
    "OIDC_CLIENT_ID": "{{oidc.oidc_client_id}}",
    "OIDC_TLS_VERIFY": "{{oidc.oidc_tls_verify}}",
    {{#oidc.enable_windows}}
    "OIDC_UPN": "{{oidc.oidc_upn}}",
    {{/oidc.enable_windows}}
    {{^oidc.enable_windows}}
    {{#oidc.oidc_use_email}}
    "OIDC_EMAIL": "{{oidc.oidc_email}}",
    {{/oidc.oidc_use_email}}
    "OIDC_CLIENT_SECRET": "{{oidc.oidc_client_secret}}",
    {{/oidc.enable_windows}}
    "OIDC_LOGOUT_PATH": "{{oidc.oidc_post_logout_redirect_uri}}/{{service.name}}{{oidc.oidc_logout_path}}",
    "OIDC_POST_LOGOUT_REDIRECT_URI": "{{oidc.oidc_post_logout_redirect_uri}}/{{service.name}}",
    "OIDC_USE_SPARTAN_RESOLVER": "{{oidc.oidc_use_spartan_resolver}}",
    {{/oidc.enable_oidc}}
    "S3_ENDPOINT": "{{s3.s3_endpoint}}",
    "S3_USE_HTTPS": "{{s3.s3_https}}",
    "S3_VERIFY_SSL": "{{s3.s3_ssl}}",
    "SPARK_MASTER_URL": "{{spark.spark_master_url}}",
    "SPARK_USER": "{{spark.spark_user}}",
    "SPARK_DRIVER_CORES": "{{spark.spark_driver_cores}}",
    "SPARK_DRIVER_MEMORY": "{{spark.spark_driver_memory}}",
    "SPARK_DRIVER_JAVA_OPTIONS": "{{spark.spark_driver_java_options}}",
    "SPARK_HISTORY_FS_LOGDIRECTORY": "{{spark.spark_history_fs_logdirectory}}",
    "SPARK_CONF_SPARK_SCHEDULER_MINREGISTEREDRESOURCESRATIO": "{{spark.spark_conf_spark_scheduler}}",
    "SPARK_CONF_CORES_MAX": "{{spark.spark_conf_cores_max}}",
    "SPARK_CONF_EXECUTOR_CORES": "{{spark.spark_conf_executor_cores}}",
    "SPARK_CONF_EXECUTOR_MEMORY": "{{spark.spark_conf_executor_memory}}",
    "SPARK_CONF_EXECUTOR_JAVA_OPTIONS": "{{spark.spark_conf_executor_java_options}}",
    "SPARK_CONF_EVENTLOG_ENABLED": "{{spark.spark_conf_eventlog_enabled}}",
    "SPARK_CONF_EVENTLOG_DIR": "{{spark.spark_conf_eventlog_dir}}",
    "SPARK_CONF_HADOOP_FS_S3A_AWS_CREDENTIALS_PROVIDER": "{{spark.spark_conf_hadoop_fs_s3a_aws_credentials_provider}}",
    {{#service.gpu_support.enabled}}
    "SPARK_CONF_MESOS_EXECUTOR_DOCKER_IMAGE":"{{spark.spark_conf_mesos_executor_docker_image}}-gpu",
    {{/service.gpu_support.enabled}}
    {{^service.gpu_support.enabled}}
    "SPARK_CONF_MESOS_EXECUTOR_DOCKER_IMAGE":"{{spark.spark_conf_mesos_executor_docker_image}}",
    {{/service.gpu_support.enabled}}
    "SPARK_CONF_SPARK_MESOS_EXECUTOR_DOCKER_FORCEPULLIMAGE": "{{spark.spark_conf_mesos_executor_docker_forcepullimage}}",
    "SPARK_CONF_MESOS_EXECUTOR_HOME": "{{spark.spark_conf_mesos_executor_home}}",
    "SPARK_CONF_MESOS_CONTAINERIZER": "{{spark.spark_conf_mesos_containerizer}}",
    "SPARK_CONF_MESOS_DRIVER_LABELS": "{{spark.spark_conf_mesos_driver_labels}}{{service.name}}",
    "SPARK_CONF_MESOS_TASK_LABELS": "{{spark.spark_conf_mesos_task_labels}}{{service.name}}",
    "SPARK_CONF_SPARK_EXECUTORENV_KRB5_CONFIG": "{{spark.spark_conf_executor_krb5_config}}",
    "SPARK_CONF_SPARK_EXECUTORENV_JAVA_HOME": "{{spark.spark_conf_executor_java_home}}",
    "SPARK_CONF_SPARK_EXECUTORENV_HADOOP_HDFS_HOME": "{{spark.spark_conf_executor_hadoop_hdfs_home}}",
    "SPARK_CONF_SPARK_EXECUTORENV_HADOOP_OPTS": "{{spark.spark_conf_executor_hadoop_opts}}",
    "SPARK_CONF_SPARK_JARS_PACKAGES": "{{spark.spark_conf_jars_packages}}",

    {{#environment.start_dask_distributed}}
    "START_DASK_DISTRIBUTED": "{{environment.start_dask_distributed}}",
    {{/environment.start_dask_distributed}}

    {{#environment.start_ray_head_node}}
    "START_RAY_HEAD_NODE": "{{environment.start_ray_head_node}}",
    {{/environment.start_ray_head_node}}

    {{#environment.start_spark_history_server}}
    "START_SPARK_HISTORY": "{{environment.start_spark_history_server}}",
    {{/environment.start_spark_history_server}}

    {{#environment.start_tensorboard}}
    "START_TENSORBOARD": "{{environment.start_tensorboard}}",
    "TENSORBOARD_LOGDIR": "{{environment.tensorboard_logdir}}",
    {{/environment.start_tensorboard}}


    "TERM": "{{environment.term}}",
    "USER": "{{environment.user}}"
  },
  "labels": {
    {{#networking.external_access.enabled}}
    "HAPROXY_GROUP": "external",
    "HAPROXY_0_ENABLED": "true",
    "HAPROXY_0_REDIRECT_TO_HTTPS": "true",
    "HAPROXY_0_VHOST": "{{networking.external_access.external_public_agent_hostname}}",
    "HAPROXY_0_PATH": "{{service.name}}",
    "HAPROXY_2_ENABLED": "true",
    "HAPROXY_2_REDIRECT_TO_HTTPS": "true",
    {{/networking.external_access.enabled}}
    "MARATHON_SINGLE_INSTANCE_APP": "true"
  },
  "healthChecks": [
    {
      "portIndex": 0,
      "protocol": "MESOS_HTTP",
      "path": "/healthz",
      "gracePeriodSeconds": 30,
      "intervalSeconds": 20,
      "timeoutSeconds": 10,
      "maxConsecutiveFailures": 3
    }
  ],
  "upgradeStrategy": {
    "minimumHealthCapacity": 0,
    "maximumOverCapacity": 0
  }
}
