{
  "packagingVersion": "3.0",
  "minDcosReleaseVersion": "1.7",
  "name": "postgresql",
  "version": "0.1",
  "scm": "https://github.com/docker-library/official-images/pulls?q=label%3Alibrary%2Fpostgres",
  "maintainer": "support@mesosphere.io",
  "website": "http://www.postgresql.org/",
  "description": "PostgreSQL is an object-relational database management system (ORDBMS) with an emphasis on extensibility and standards-compliance.",
  "framework": true,
  "tags": [
    "postgres",
    "postgresql",
    "database"
  ],
  "preInstallNotes": "PostgreSQL requires at least 0.3 CPU and 256MB of RAM.\n\nWARNING: PostgreSQL on DCOS is currently EXPERIMENTAL. There may be bugs, incomplete\nfeatures, incorrect documentation, or other discrepancies.\n\nThis package can create local persistent volumes for the database files to survive across restarts or failures. The parameter `host_volume` controls the path in the host in which these volumes will be created, which can be an NFS-mounted share. This path defaults to /tmp, so if you didn't provide a value for `host_volume` when installing the package,\nYOUR DATA WILL NOT BE SAVED IN ANY WAY.\n\nThis DC/OS PostgreSQL package creates a named Virtual IP for other services in the cluster to access the service in the format `postgresql.marathon.l4lb.thisdcos.directory:5432` (where `postgresql` would be the package name used for installation).\nIf the `external_access` installation option is selected, it also creates an entry in the External Load Balancer for accessing the service from outside of the cluster on port `15432` by default.\n\n You can administer this service easily installing the DC/OS `postgresql-admin` package.",
  "postInstallNotes": "PostgreSQL has been installed.\n Default Login `admin`\nDefault password: `password`",
  "postUninstallNotes": "PostgreSQL has been uninstalled. Note that any data persisted to a NFS share still exists and will need to be manually removed.",
  "licenses": [
    {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    }
  ]
}
