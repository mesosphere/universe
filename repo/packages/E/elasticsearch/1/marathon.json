{
  "id": "{{elasticsearch.framework-name}}",
  "cpus": {{elasticsearch.scheduler.cpu}},
  "mem": {{elasticsearch.scheduler.ram}},
  "ports": [0],
  "instances": {{elasticsearch.scheduler.instances}},
  "healthChecks": [
    {
      "gracePeriodSeconds": 120,
      "intervalSeconds": 30,
      "maxConsecutiveFailures": 0,
      "path": "/",
      "portIndex": 0,
      "protocol": "HTTP",
      "timeoutSeconds": 5
    }
  ],
  "args": [
    "--zookeeperUrl={{mesos.master}}",
    "--zookeeperTimeout={{elasticsearch.…}}", //TODO
    "--webUiPort={{elasticsearch.port}}",
    "--frameworkFailoverTimeout={{elasticsearch.…}}", //TODO
    "--frameworkName={{elasticsearch.…}}", //TODO

    "--elasticsearchNodes={{elasticsearch.executor.instances}}",
    "--elasticsearchClusterName={{elasticsearch.executor.…}}", //TODO
    "--elasticsearchCpu={{elasticsearch.executor.cpu}}",
    "--elasticsearchDisk={{elasticsearch.executor.disk}}",
    "--elasticsearchRam={{elasticsearch.executor.ram}}",
    "--elasticsearchSettingsLocation={{elasticsearch.executor.…}}", //TODO

    "--executorForcePullImage={{elasticsearch.executor.…}}", //TODO
    "--executorHealthDelay={{elasticsearch.executor.…}}", //TODO
    "--executorImage={{elasticsearch.executor.…}}", //TODO
    "--executorName={{elasticsearch.executor.…}}", //TODO
    "--executorTimeout={{elasticsearch.executor.…}}", //TODO
    "--executorHealthDelay. Will start new executor after this length of time.={{elasticsearch.executor.…}}" //TODO
  ],
  "env": {
    "JAVA_OPTS": "{{elasticsearch.scheduler.java-heap}}"
  },
  "container": {
    "type": "DOCKER",
    "docker": {
      "image": "mesos/elasticsearch-scheduler",
      "network": "HOST",
      "forcePullImage": {{elasticsearch.forcePullImage}}
    }
  },
  "ports": [{{elasticsearch.port}}],
  "requirePorts": true
}
