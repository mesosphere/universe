{
  "id": "hdfs",
  "cpus": 0.5,
  "mem": 512,
  "disk": 100,
  "instances": 1,
  "env": {
    "LD_LIBRARY_PATH": "{{hdfs.ld-library-path}}" 
  },
  "cmd": "export JAVA_HOME=$MESOS_DIRECTORY/{{hdfs.jre-version}} && {{#hdfs.custom-config}}echo {{hdfs.custom-config}} | base64 --decode > mesos-site.xml && {{/hdfs.custom-config}}cd {{hdfs.framework-version}} && if [ -e '../mesos-site.xml' ]; then cp -f ../mesos-site.xml ./etc/hadoop/; fi && ./bin/hdfs-mesos",
  "uris": {{{hdfs.scheduler-uris}}},
  "healthChecks": [
    {
      "protocol": "COMMAND",
      "command": { "value": "export PATH=$MESOS_DIRECTORY/{{hdfs.framework-version}}/bin:$PATH && export JAVA_HOME=$MESOS_DIRECTORY/{{hdfs.jre-version}} && timeout 45s hadoop fs -ls hdfs://hdfs/ && rm -rf hdfs-framework-healthcheck && hadoop fs -rm -r -f hdfs://hdfs/hdfs-framework-healthcheck && hadoop fs -mkdir hdfs://hdfs/hdfs-framework-healthcheck && mkdir hdfs-framework-healthcheck && echo \"this is a test\" > hdfs-framework-healthcheck/test1.txt && hadoop fs -put hdfs-framework-healthcheck/test1.txt hdfs://hdfs/hdfs-framework-healthcheck && hadoop fs -get hdfs://hdfs/hdfs-framework-healthcheck/test1.txt hdfs-framework-healthcheck/test2.txt && rm -rf hdfs-framework-healthcheck && hadoop fs -rm -r -f hdfs://hdfs/hdfs-framework-healthcheck" },
      "gracePeriodSeconds": 300,
      "intervalSeconds": 60,
      "timeoutSeconds": 60,
      "maxConsecutiveFailures": 3
    }
  ]
}
