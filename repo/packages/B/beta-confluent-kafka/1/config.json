{
    "type": "object",
    "properties": {
        "kafka": {
            "type": "object",
            "properties": {
                "num_recovery_threads_per_data_dir": {
                    "title": "num.recovery.threads.per.data.dir",
                    "type": "integer",
                    "description": "The number of threads per data directory to be used for log recovery at startup and flushing at shutdown",
                    "default": 1
                },
                "controlled_shutdown_enable": {
                    "title": "controlled.shutdown.enable",
                    "type": "boolean",
                    "description": "Enable controlled shutdown of the server",
                    "default": true
                },
                "log_flush_scheduler_interval_ms": {
                    "title": "log.flush.scheduler.interval.ms",
                    "type": "string",
                    "description": "The frequency in ms that the log flusher checks whether any log needs to be flushed to disk",
                    "default": "9223372036854775807"
                },
                "replica_fetch_wait_max_ms": {
                    "title": "replica.fetch.wait.max.ms",
                    "type": "integer",
                    "description": "Max wait time for each fetcher request issued by follower replicas. This value should always be less than the replica.lag.time.max.ms at all times to prevent frequent shrinking of ISR for low throughput topics",
                    "default": 500
                },
                "offsets_load_buffer_size": {
                    "title": "offsets.load.buffer.size",
                    "type": "integer",
                    "description": "Batch size for reading from the offsets segments when loading offsets into the cache.",
                    "default": 5242880
                },
                "inter_broker_protocol_version": {
                    "type": "string",
                    "title": "inter.broker.protocol.version",
                    "description": "Specify which version of the inter-broker protocol will be used, which must align with log.message.format.version. This is typically bumped after all brokers were upgraded to a new version. Example of some valid values are: 0.8.0, 0.8.1, 0.8.1.1, 0.8.2, 0.8.2.0, 0.8.2.1, 0.9.0.0, 0.9.0.1, 0.10.0.0. Check ApiVersion for the full list.",
                    "default": "0.10.0.0"
                },
                "offsets_topic_num_partitions": {
                    "title": "offsets.topic.num.partitions",
                    "type": "integer",
                    "description": "The number of partitions for the offset commit topic (should not change after deployment).",
                    "default": 50
                },
                "delete_topic_enable": {
                    "title": "delete.topic.enable",
                    "type": "boolean",
                    "description": "Enables delete topic. Delete topic through the admin tool will have no effect if this config is turned off",
                    "default": false
                },
                "replica_high_watermark_checkpoint_interval_ms": {
                    "title": "replica.high.watermark.checkpoint.interval.ms",
                    "type": "integer",
                    "description": "The frequency with which the high watermark is saved out to disk",
                    "default": 5000
                },
                "log_cleanup_policy": {
                    "type": "string",
                    "title": "log.cleanup.policy",
                    "description": "The default cleanup policy for segments beyond the retention window, must be either 'delete' or 'compact'",
                    "default": "delete"
                },
                "log_preallocate": {
                    "title": "log.preallocate",
                    "type": "boolean",
                    "description": "Should pre allocate file when create new segment? If you are using Kafka on Windows, you probably need to set it to true.",
                    "default": false
                },
                "leader_imbalance_per_broker_percentage": {
                    "title": "leader.imbalance.per.broker.percentage",
                    "type": "integer",
                    "description": "The ratio of leader imbalance allowed per broker. The controller would trigger a leader balance if it goes above this value per broker. The value is specified in percentage.",
                    "default": 10
                },
                "zookeeper_session_timeout_ms": {
                    "title": "zookeeper.session.timeout.ms",
                    "type": "integer",
                    "description": "Zookeeper session timeout",
                    "default": 6000
                },
                "num_io_threads": {
                    "title": "num.io.thread",
                    "type": "integer",
                    "description": "The number of io threads that the server uses for carrying out network requests",
                    "default": 8
                },
                "kafka_advertise_host_ip": {
                    "type": "boolean",
                    "default": true,
                    "description": "Automatically configure advertised.host.name with the tasks' IP address"
                },
                "unclean_leader_election_enable": {
                    "title": "unclean.leader.election.enable",
                    "type": "boolean",
                    "description": "Indicates whether to enable replicas not in the ISR set to be elected as leader as a last resort, even though doing so may result in data loss",
                    "default": true
                },
                "log_segment_bytes": {
                    "title": "log.segment.bytes",
                    "type": "integer",
                    "description": "The maximum size of a single log file",
                    "default": 1073741824
                },
                "quota_producer_default": {
                    "title": "quota.producer.default",
                    "type": "string",
                    "description": "Any producer distinguished by clientId will get throttled if it produces more bytes than this value per-second",
                    "default": "9223372036854775807"
                },
                "num_replica_fetchers": {
                    "title": "num.replica.fetchers",
                    "type": "integer",
                    "description": "Number of fetcher threads used to replicate messages from a source broker. Increasing this value can increase the degree of I/O parallelism in the follower broker.",
                    "default": 1
                },
                "message_max_bytes": {
                    "title": "message.max.bytes",
                    "type": "integer",
                    "description": "The maximum size of message that the server can receive",
                    "default": 1000012
                },
                "log_flush_interval_messages": {
                    "title": "log.flush.interval.messages",
                    "type": "string",
                    "description": "The number of messages accumulated on a log partition before messages are flushed to disk",
                    "default": "9223372036854775807"
                },
                "log_index_size_max_bytes": {
                    "title": "log.index.size.max.bytes",
                    "type": "integer",
                    "description": "The maximum size in bytes of the offset index",
                    "default": 10485760
                },
                "group_min_session_timeout_ms": {
                    "title": "group.min.session.timeout.ms",
                    "type": "integer",
                    "description": "The minimum allowed session timeout for registered consumers",
                    "default": 6000
                },
                "min_insync_replicas": {
                    "title": "min.insync.replicas",
                    "type": "integer",
                    "description": "define the minimum number of replicas in ISR needed to satisfy a produce request with required.acks=-1 (or all)",
                    "default": 1
                },
                "replica_fetch_backoff_ms": {
                    "title": "replica.fetch.backoff.ms",
                    "type": "integer",
                    "description": "The amount of time to sleep when fetch partition error occurs.",
                    "default": 1000
                },
                "log_cleaner_io_buffer_size": {
                    "title": "log.cleaner.io.buffer.size",
                    "type": "integer",
                    "description": "The total memory used for log cleaner I/O buffers across all cleaner threads",
                    "default": 524288
                },
                "log_roll_hours": {
                    "title": "log.roll.hours",
                    "type": "integer",
                    "description": "The maximum time before a new log segment is rolled out (in hours), secondary to log.roll.ms property",
                    "default": 168
                },
                "request_timeout_ms": {
                    "title": "request.timeout.ms",
                    "type": "integer",
                    "description": "The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted.",
                    "default": 30000
                },
                "offsets_retention_check_interval_ms": {
                    "title": "offsets.retention.check.interval.ms",
                    "type": "integer",
                    "description": "Frequency at which to check for stale offsets",
                    "default": 600000
                },
                "log_cleaner_dedupe_buffer_size": {
                    "title": "log.cleaner.dedupe.buffer.size",
                    "type": "integer",
                    "description": "The total memory used for log deduplication across all cleaner threads",
                    "default": 134217728
                },
                "controlled_shutdown_max_retries": {
                    "title": "controlled.shutdown.max.retries",
                    "type": "integer",
                    "description": "Controlled shutdown can fail for multiple reasons. This determines the number of retries when such failure happens",
                    "default": 3
                },
                "confluent_metrics_reporter_topic": {
                    "title": "confluent.metrics.reporter.topic",
                    "type": "string",
                    "description": "Internal metrics topic (DO NOT CHANGE)",
                    "default": "_confluent-metrics"
                },
                "max_connections_per_ip": {
                    "title": "max.connections.per.ip",
                    "type": "integer",
                    "description": "mum number of connections we allow from each ip address",
                    "default": 2147483647
                },
                "confluent_support_metrics_enable": {
                    "title": "confluent.support.metrics.enable",
                    "type": "boolean",
                    "description": "Enable the Metrics feature to collect and report support metrics",
                    "default": false
                },
                "log_cleaner_io_max_bytes_per_second": {
                    "title": "log.cleaner.io.max.bytes.per.second",
                    "type": "number",
                    "description": "The log cleaner will be throttled so that the sum of its read and write i/o will be less than this value on average",
                    "default": 1.7976931348623157e+308
                },
                "offsets_topic_compression_codec": {
                    "title": "offsets.topic.compression.codec",
                    "type": "integer",
                    "description": "Compression codec for the offsets topic - compression may be used to achieve 'atomic' commits",
                    "default": 0
                },
                "socket_request_max_bytes": {
                    "title": "socket.request.max.bytes",
                    "type": "integer",
                    "description": "The maximum number of bytes in a socket request",
                    "default": 104857600
                },
                "confluent_support_customer_id": {
                    "title": "confluent.support.customer.id",
                    "type": "string",
                    "description": "The customer ID under which support metrics will be collected and reported.   When set to 'anonymous', only a reduced set of metrics is collected and reported.",
                    "default": "anonymous"
                },
                "log_roll_jitter_hours": {
                    "title": "log.roll.jitter.hours",
                    "type": "integer",
                    "description": "The maximum jitter to subtract from logRollTimeMillis (in hours), secondary to log.roll.jitter.ms property",
                    "default": 0
                },
                "log_cleaner_min_cleanable_ratio": {
                    "title": "log.cleaner.min.cleanable.ratio",
                    "type": "number",
                    "description": "The minimum ratio of dirty log to total log for a log to eligible for cleaning",
                    "default": 0.5
                },
                "reserved_broker_max_id": {
                    "title": "reserved.broker.max.id",
                    "type": "integer",
                    "description": "Max number that can be used for a broker.id",
                    "default": 1000
                },
                "quota_window_size_seconds": {
                    "title": "quota.window.size.seconds",
                    "type": "integer",
                    "description": "The time span of each sample",
                    "default": 1
                },
                "background_threads": {
                    "title": "background.threads",
                    "type": "integer",
                    "description": "The number of threads to use for various background processing tasks",
                    "default": 10
                },
                "controlled_shutdown_retry_backoff_ms": {
                    "title": "controlled.shutdown.retry.backoff.ms",
                    "type": "integer",
                    "description": "Before each retry, the system needs time to recover from the state that caused the previous failure (Controller fail over, replica lag etc). This config determines the amount of time to wait before retrying.",
                    "default": 5000
                },
                "socket_receive_buffer_bytes": {
                    "title": "socket.receive.buffer.bytes",
                    "type": "integer",
                    "description": "The SO_RCVBUF buffer of the socket sever sockets",
                    "default": 102400
                },
                "controller_socket_timeout_ms": {
                    "title": "controller.socket.timeout.ms",
                    "type": "integer",
                    "description": "The socket timeout for controller-to-broker channels",
                    "default": 30000
                },
                "offsets_topic_replication_factor": {
                    "title": "offsets.topic.replication.factor",
                    "type": "integer",
                    "description": "The replication factor for the offsets topic (set higher to ensure availability). To ensure that the effective replication factor of the offsets topic is the configured value, the number of alive brokers has to be at least the replication factor at the time of the first request for the offsets topic. If not, either the offsets topic creation will fail or it will get a replication factor of min(alive brokers, configured replication factor)",
                    "default": 3
                },
                "log_retention_hours": {
                    "title": "log.retention.hours",
                    "type": "integer",
                    "description": "The number of hours to keep a log file before deleting it (in hours), tertiary to log.retention.ms property",
                    "default": 168
                },
                "replica_socket_timeout_ms": {
                    "title": "replica.socket.timeout.ms",
                    "type": "integer",
                    "description": "The socket timeout for network requests. Its value should be at least replica.fetch.wait.max.ms",
                    "default": 30000
                },
                "log_retention_check_interval_ms": {
                    "title": "log.retention.check.interval.ms",
                    "type": "integer",
                    "description": "The frequency in milliseconds that the log cleaner checks whether any log is eligible for deletion",
                    "default": 300000
                },
                "group_max_session_timeout_ms": {
                    "title": "group.max.session.timeout.ms",
                    "type": "integer",
                    "description": "The maximum allowed session timeout for registered consumers",
                    "default": 300000
                },
                "metrics_num_samples": {
                    "title": "metrics.num.samples",
                    "type": "integer",
                    "description": "The number of samples maintained to compute metrics.",
                    "default": 2
                },
                "confluent_metric_reporters": {
                    "title": "metric.reporters",
                    "type": "string",
                    "description": "Enterprise java class to collect/report broker metrics",
                    "default": "io.confluent.metrics.reporter.ConfluentMetricsReporter"
                },
                "replica_fetch_max_bytes": {
                    "title": "replica.fetch.max.bytes",
                    "type": "integer",
                    "description": "The number of byes of messages to attempt to fetch",
                    "default": 1048576
                },
                "log_segment_delete_delay_ms": {
                    "title": "log.segment.delete.delay.ms",
                    "type": "integer",
                    "description": "The amount of time to wait before deleting a file from the filesystem",
                    "default": 60000
                },
                "leader_imbalance_check_interval_seconds": {
                    "title": "leader.imbalance.check.interval.seconds",
                    "type": "integer",
                    "description": "The frequency with which the partition rebalance check is triggered by the controller",
                    "default": 300
                },
                "fetch_purgatory_purge_interval_requests": {
                    "title": "fetch.purgatory.purge.interval.requests",
                    "type": "integer",
                    "description": "The purge interval (in number of requests) of the fetch request purgatory",
                    "default": 1000
                },
                "log_cleaner_io_buffer_load_factor": {
                    "title": "log.cleaner.io.buffer.load.factor",
                    "type": "number",
                    "description": "Log cleaner dedupe buffer load factor. The percentage full the dedupe buffer can become. A higher value will allow more log to be cleaned at once but will lead to more hash collisions",
                    "default": 0.9
                },
                "zookeeper_sync_time_ms": {
                    "title": "zookeeper.sync.time.ms",
                    "type": "integer",
                    "description": "How far a ZK follower can be behind a ZK leader",
                    "default": 2000
                },
                "connections_max_idle_ms": {
                    "title": "connections.max.idle.ms",
                    "type": "integer",
                    "description": "Idle connections timeout: the server socket processor threads close the connections that idle more than this",
                    "default": 600000
                },
                "auto_leader_rebalance_enable": {
                    "title": "auto.leader.rebalance.enable",
                    "type": "boolean",
                    "description": "Enables auto leader balancing. A background thread checks and triggers leader balance if required at regular intervals",
                    "default": true
                },
                "offset_metadata_max_bytes": {
                    "title": "offset.metadata.max.bytes",
                    "type": "integer",
                    "description": "The maximum size for a metadata entry associated with an offset commit",
                    "default": 4096
                },
                "replica_lag_time_max_ms": {
                    "title": "replica.lag.time.max.ms",
                    "type": "integer",
                    "description": "If a follower hasn't sent any fetch requests or hasn't consumed up to the leaders log end offset for at least this time, the leader will remove the follower from isr",
                    "default": 10000
                },
                "compression_type": {
                    "title": "compression.type",
                    "type": "string",
                    "description": "Specify the final compression type for a given topic. This configuration accepts the standard compression codecs ('gzip', 'snappy', lz4). It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer' which means retain the original compression codec set by the producer.",
                    "default": "producer"
                },
                "default_replication_factor": {
                    "title": "default.replication.factor",
                    "type": "integer",
                    "description": "Default replication factors for automatically created topics",
                    "default": 1
                },
                "socket_send_buffer_bytes": {
                    "title": "socket.send.buffer.bytes",
                    "type": "integer",
                    "description": "The SO_SNDBUF buffer of the socket sever sockets",
                    "default": 102400
                },
                "log_index_interval_bytes": {
                    "title": "log.index.interval.bytes",
                    "type": "integer",
                    "description": "The interval with which we add an entry to the offset index",
                    "default": 4096
                },
                "quota_window_num": {
                    "title": "quota.window.num",
                    "type": "integer",
                    "description": "The number of samples to retain in memory",
                    "default": 11
                },
                "metrics_sample_window_ms": {
                    "title": "metrics.sample.window.ms",
                    "type": "integer",
                    "description": "The number of samples maintained to compute metrics.",
                    "default": 30000
                },
                "producer_purgatory_purge_interval_requests": {
                    "title": "producer.purgatory.purge.interval.requests",
                    "type": "integer",
                    "description": "The purge interval (in number of requests) of the producer request purgatory",
                    "default": 1000
                },
                "offsets_retention_minutes": {
                    "title": "offsets.retention.minutes",
                    "type": "integer",
                    "description": "Log retention window in minutes for offsets topic",
                    "default": 1440
                },
                "num_partitions": {
                    "title": "num.partitions",
                    "type": "integer",
                    "description": "The default number of log partitions per topic",
                    "default": 1
                },
                "log_cleaner_threads": {
                    "title": "log.cleaner.threads",
                    "type": "integer",
                    "description": "The number of background threads to use for log cleaning",
                    "default": 1
                },
                "log_cleaner_delete_retention_ms": {
                    "title": "log.cleaner.delete.retention.ms",
                    "type": "integer",
                    "description": "How long are delete records retained?",
                    "default": 86400000
                },
                "offsets_commit_timeout_ms": {
                    "title": "offsets.commit.timeout.ms",
                    "type": "integer",
                    "description": "Offset commit will be delayed until all replicas for the offsets topic receive the commit or this timeout is reached. This is similar to the producer request timeout.",
                    "default": 5000
                },
                "queued_max_requests": {
                    "title": "queued.max.requests",
                    "type": "integer",
                    "description": "The number of queued requests allowed before blocking the network threads ",
                    "default": 500
                },
                "log_message_format_version": {
                    "type": "string",
                    "title": "log.message.format.version",
                    "description": "Specify which version of the log message format will be used, which must align with inter.broker.protocol.version. This is a new setting as of 0.10.0.0, and should be left at 0.9.0 until clients are updated to 0.10.0.x. Clients on earlier versions may see a performance penalty if this is increased before they've upgraded. See the latest Kafka documentation for details.",
                    "default": "0.10.0"
                },
                "max_connections_per_ip_overrides": {
                    "type": "string",
                    "title": "max.connections.per.ip.overrides",
                    "description": "Per-ip or hostname overrides to the default maximum number of connections",
                    "default": ""
                },
                "quota_consumer_default": {
                    "title": "quota.consumer.default",
                    "type": "string",
                    "description": "Any consumer distinguished by clientId/consumer group will get throttled if it fetches more bytes than this value per-second",
                    "default": "9223372036854775807"
                },
                "replica_socket_receive_buffer_bytes": {
                    "title": "replica.socket.receive.buffer.bytes",
                    "type": "integer",
                    "description": "The socket receive buffer for network requests",
                    "default": 65536
                },
                "log_cleaner_backoff_ms": {
                    "title": "log.cleaner.backoff.ms",
                    "type": "integer",
                    "description": "The amount of time to sleep when there are no logs to clean",
                    "default": 15000
                },
                "auto_create_topics_enable": {
                    "title": "auto.create.topics.enable",
                    "type": "boolean",
                    "description": "Enables auto creation of topic on the server",
                    "default": true
                },
                "log_cleaner_enable": {
                    "title": "log.cleaner.enable",
                    "type": "boolean",
                    "description": "Enable the log cleaner process to run on the server? Should be enabled if using any topics with a cleanup.policy=compact including the internal offsets topic. If disabled those topics will not be compacted and continually grow in size.",
                    "default": true
                },
                "log_retention_bytes": {
                    "title": "log.retention.bytes",
                    "type": "string",
                    "description": "The maximum size of the log before deleting it",
                    "default": "-1"
                },
                "replica_fetch_min_bytes": {
                    "title": "replica.fetch.min.bytes",
                    "type": "integer",
                    "description": "Minimum bytes expected for each fetch response. If not enough bytes, wait up to replicaMaxWaitTimeMs",
                    "default": 1
                },
                "offsets_commit_required_acks": {
                    "title": "offsets.commit.required.acks",
                    "type": "integer",
                    "description": "The required acks before the commit can be accepted. In general, the default (-1) should not be overridden",
                    "default": -1
                },
                "offsets_topic_segment_bytes": {
                    "title": "offsets.topic.segment.bytes",
                    "type": "integer",
                    "description": "The offsets topic segment bytes should be kept relatively small in order to facilitate faster log compaction and cache loads",
                    "default": 104857600
                },
                "log_flush_offset_checkpoint_interval_ms": {
                    "title": "log.flush.offset.checkpoint.interval.ms",
                    "type": "integer",
                    "description": "The frequency with which we update the persistent record of the last flush which acts as the log recovery point",
                    "default": 60000
                },
                "num_network_threads": {
                    "title": "num.network.threads",
                    "type": "integer",
                    "description": "The number of network threads that the server uses for handling network requests",
                    "default": 3
                },
                "confluent_metrics_reporter_topic_replicas": {
                    "title": "confluent.metrics.reporter.topic.replicas",
                    "type": "integer",
                    "description": "Replication factor for the internal metrics topic",
                    "default": 3
                }
            },
            "description": "Kafka service configuration properties",
            "additionalProperties": false
        },
        "service": {
            "type": "object",
            "required": [
                "deploy_strategy",
                "beta-optin"
            ],
            "properties": {
                "principal": {
                    "type": "string",
                    "default": "confluent-kafka-principal",
                    "description": "The principal for the Kafka service instance."
                },
                "name": {
                    "type": "string",
                    "default": "confluent-kafka",
                    "description": "Confluent Kafka"
                },
                "beta-optin": {
                    "type": "boolean",
                    "title": "Agree to Beta terms",
                    "description": "I have been invited to the Beta Program and accept all the terms of the Beta Agreement.",
                    "default": ""
                },
                "placement_constraint": {
                    "type": "string",
                    "default": "hostname:MAX_PER:1",
                    "description": "Marathon-style placement constraint for Broker nodes. Example: rack_id:LIKE:rack-foo-.*,rack_id:MAX_PER:2"
                },
                "user": {
                    "type": "string",
                    "default": "root",
                    "description": "The user that the service will run as."
                },
                "mesos_api_version": {
                    "type": "string",
                    "default": "V0",
                    "description": "Configures the Mesos API version to use. Possible values: V0 (non-HTTP), V1 (HTTP)"
                },
                "deploy_strategy": {
                    "type": "string",
                    "default": "serial",
                    "description": "Deployment phase strategy. See documentation. [serial, serial-canary, parallel-canary, parallel]"
                },
                "secret_name": {
                    "type": "string",
                    "default": "",
                    "description": "Name of the Secret Store credentials to use for DC/OS service authentication. This should be left empty unless service authentication is needed."
                }
            },
            "description": "DC/OS service configuration properties"
        },
        "brokers": {
            "type": "object",
            "required": [
                "cpus",
                "mem",
                "disk",
                "count"
            ],
            "properties": {
                "disk_path": {
                    "type": "string",
                    "default": "kafka-broker-data",
                    "description": "Relative path of consistent disk"
                },
                "cpus": {
                    "type": "number",
                    "default": 1.0,
                    "description": "Broker cpu requirements"
                },
                "heap": {
                    "type": "object",
                    "required": [
                        "size"
                    ],
                    "properties": {
                        "size": {
                            "type": "integer",
                            "default": 2048,
                            "description": "The amount of JVM heap, in MB, allocated to the Kafka broker process."
                        }
                    },
                    "description": "The Kafka process JVM heap configuration object",
                    "additionalProperties": false
                },
                "count": {
                    "type": "number",
                    "default": 3,
                    "description": "Number of brokers to run"
                },
                "disk_type": {
                    "type": "string",
                    "default": "ROOT",
                    "description": "Disk type to be used for storing broker data. See documentation. [ROOT, MOUNT]"
                },
                "disk": {
                    "type": "integer",
                    "default": 5000,
                    "description": "Broker disk requirements (only respected with persistent volumes)"
                },
                "mem": {
                    "type": "integer",
                    "default": 4096,
                    "description": "Broker mem requirements"
                },
                "port": {
                    "type": "integer",
                    "default": 0,
                    "description": "Port for broker to listen on"
                }
            },
            "description": "Kafka broker configuration properties"
        }
    }
}