{
  "id": "{{service.name}}",
  "cpus": 1.0,
  "mem": 1024,
  "instances": 1,
  "cmd": "export LD_LIBRARY_PATH=$MESOS_SANDBOX/libmesos-bundle/lib:$LD_LIBRARY_PATH; export MESOS_NATIVE_JAVA_LIBRARY=$(ls $MESOS_SANDBOX/libmesos-bundle/lib/libmesos-*.so); export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jre*/); export JAVA_HOME=${JAVA_HOME%/}; export PATH=$(ls -d $JAVA_HOME/bin):$PATH &&  export JAVA_OPTS=\"-Xms256M -Xmx512M -XX:-HeapDumpOnOutOfMemoryError\" &&  ./tensorflow-scheduler/bin/tensorflow ./tensorflow-scheduler/svc.yml",
  "labels": {
    "DCOS_COMMONS_API_VERSION": "v1",
    "DCOS_COMMONS_UNINSTALL": "true",
    "DCOS_PACKAGE_FRAMEWORK_NAME": "{{service.name}}",
    "MARATHON_SINGLE_INSTANCE_APP": "true",
    "DCOS_SERVICE_NAME": "{{service.name}}",
    "DCOS_SERVICE_PORT_INDEX": "0",
    "DCOS_SERVICE_SCHEME": "http"
  },
  {{#service.service_account_secret}}
  "secrets": {
    "serviceCredential": {
      "source": "{{service.service_account_secret}}"
    }
  },
  {{/service.service_account_secret}}
  "env": {
    "BOOTSTRAP_URI": "{{resource.assets.uris.bootstrap-zip}}",
    "CONFIG_TEMPLATE_PATH": "tensorflow-scheduler",

    "FRAMEWORK_NAME": "{{service.name}}",
    "FRAMEWORK_LOG_LEVEL": "{{service.log_level}}",
    "FRAMEWORK_USER": "{{service.user}}",
    "FRAMEWORK_PRINCIPAL": "{{service.service_account}}",
    "TF_IMAGE": "{{service.tf_image}}",
    "GPU_TF_IMAGE": "{{service.gpu_tf_image}}",
    {{#service.job_url}}
    "JOB_URL": "{{service.job_url}}",
    "JOB_PATH": "{{service.job_path}}",
    "JOB_NAME": "{{service.job_name}}",
    {{/service.job_url}}
    {{^service.job_url}}
    "JOB_URL": "{{resource.assets.uris.examples-zip}}",
    "JOB_PATH": "tensorflow-examples",
    "JOB_NAME": "default",
    {{/service.job_url}}
    "JOB_CONTEXT": "{{service.job_context}}",
    "SHARED_FILESYSTEM": "{{service.shared_filesystem}}",
    "GCS_KEY": "{{service.gcs_key}}",
    {{#service.use_gcs_key_secret}}
    "USE_GCS_KEY": "{{service.use_gcs_key_secret}}",
    {{/service.use_gcs_key_secret}}
    {{#service.use_tensorboard}}
    "USE_TENSORBOARD": "{{service.use_tensorboard}}",
    {{/service.use_tensorboard}}
    "WORKER_COUNT": "{{worker.count}}",
    "WORKER_PLACEMENT": "{{worker.placement_constraint}}",
    {{#service.virtual_network_enabled}}
    "ENABLE_VIRTUAL_NETWORK": "yes",
    "VIRTUAL_NETWORK_NAME": "{{service.virtual_network_name}}",
    "VIRTUAL_NETWORK_PLUGIN_LABELS": "{{service.virtual_network_plugin_labels}}",
    {{/service.virtual_network_enabled}}
    "WORKER_PORT": "{{worker.port}}",
    "WORKER_CPUS": "{{worker.cpus}}",
    "WORKER_MEM": "{{worker.mem}}",
    "WORKER_DISK": "{{worker.disk}}",
    "WORKER_DISK_TYPE": "{{worker.disk_type}}",

    "GPU_WORKER_COUNT": "{{gpu_worker.count}}",
    "GPU_WORKER_GPUS": "{{gpu_worker.gpus}}",
    "GPU_WORKER_CPUS": "{{gpu_worker.cpus}}",
    "GPU_WORKER_MEM": "{{gpu_worker.mem}}",
    "GPU_WORKER_DISK": "{{gpu_worker.disk}}",
    "GPU_WORKER_DISK_TYPE": "{{gpu_worker.disk_type}}",

    "TENSORBOARD_CPUS": "{{tensorboard.cpus}}",
    "TENSORBOARD_MEM": "{{tensorboard.mem}}",
    "TENSORBOARD_PORT": "{{tensorboard.port}}",

    "PS_PORT": "{{parameter_server.port}}",
    "PS_CPUS": "{{parameter_server.cpus}}",
    "PS_MEM": "{{parameter_server.mem}}",
    "PS_PLACEMENT": "{{parameter_server.placement_constraint}}",
    "PS_COUNT": "{{parameter_server.count}}",
    "PS_DISK": "{{parameter_server.disk}}",
    "PS_DISK_TYPE": "{{parameter_server.disk_type}}",

    "JAVA_URI": "{{resource.assets.uris.jre-tar-gz}}",
    "EXECUTOR_URI": "{{resource.assets.uris.executor-zip}}",
    {{#service.service_account_secret}}
    "DCOS_SERVICE_ACCOUNT_CREDENTIAL": { "secret": "serviceCredential" },
    "MESOS_MODULES": "{\"libraries\": [{\"file\": \"libdcos_security.so\", \"modules\": [{\"name\": \"com_mesosphere_dcos_ClassicRPCAuthenticatee\"}]}]}",
    "MESOS_AUTHENTICATEE": "com_mesosphere_dcos_ClassicRPCAuthenticatee",
    {{/service.service_account_secret}}
    "LIBMESOS_URI": "{{resource.assets.uris.libmesos-bundle-tar-gz}}"
  },
  "uris": [
    "{{resource.assets.uris.jre-tar-gz}}",
    "{{resource.assets.uris.scheduler-zip}}",
    "{{resource.assets.uris.examples-zip}}",
    "{{resource.assets.uris.libmesos-bundle-tar-gz}}"
  ],
  "upgradeStrategy":{
    "minimumHealthCapacity": 0,
    "maximumOverCapacity": 0
  },
  "healthChecks": [
    {
      "protocol": "HTTP",
      "path": "/v1/plans/deploy",
      "gracePeriodSeconds": 900,
      "intervalSeconds": 30,
      "portIndex": 0,
      "timeoutSeconds": 30,
      "maxConsecutiveFailures": 0
    },
    {
      "protocol": "HTTP",
      "path": "/v1/plans/recovery",
      "gracePeriodSeconds": 900,
      "intervalSeconds": 30,
      "portIndex": 0,
      "timeoutSeconds": 30,
      "maxConsecutiveFailures": 0
    }
  ],
  "portDefinitions": [
    {
      "port": 0,
      "protocol": "tcp",
      "name": "api",
      "labels": { "VIP_0": "/api.{{service.name}}:80" }
    }
  ]
}
