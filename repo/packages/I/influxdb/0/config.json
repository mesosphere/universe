{
	"properties": {
		"service": {
			"type": "object",
			"description": "DC/OS service configuration properties",
			"properties": {
				"name": {
					"description": "Name of this service instance",
					"type": "string",
					"default": "influxdb"
				},
				"cpus": {
					"description": "CPU shares to allocate to each service instance.",
					"type": "number",
					"default": 1,
					"minimum": 1
				},
				"mem": {
					"description":  "Memory to allocate to each service instance.",
					"type": "number",
					"default": 2048.0,
					"minimum": 1024.0
				}
			},
			"required": [
				"cpus",
				"mem"
			]
		},
		"storage": {
			"type": "object",
			"description": "influxdb storage configuration properties",
			"properties":{
				"pre_create_database": {
					"description": "Check to create one or more databases on the first time the service starts automatically.",
					"type": "boolean",
					"default": true
				},
				"pre_create_database_name": {
					"description": "Use 'db1;db2;db3' to create databases named 'db1', 'db2', and 'db3' on the first time the service starts automatically. Each database name is separated by ; .",
					"type": "string",
					"default": "cadvisor"
				},
				"host_volume_influxdb": {
					"description": "If using non-persistent volumes (local volumes), this sets the location of a volume on the host to be used for the influxdb service to store the contents of the influxdb. The final location will be derived from this value plus the name set in `name` (e.g. `/mnt/host_volume/service_name`). This can be a mounted NFS drive. Note that this path must be the same on all DC/OS agents. NOTE: if you don't change the default /tmp value, YOUR DATA WILL NOT BE SAVED IN ANY WAY.",
					"type": "string",
					"default": "/tmp"
				},     
				"persistence": {
					"type": "object",
					"description": "Enable persistent storage.",
					"properties": {    
						"enable": {
							"description": "Enable or disable persistent storage.",
							"type": "boolean",
							"default": false                    
						},
						"volume_size_influxdb": {
							"description": "If a new volume is to be created, this controls its size in MBs.",
							"type": "number",
							"default": 2048
						},
						"external": {
							"type": "object",
							"description": "External persistent storage properties",
								"properties":{   
									"enable": {
										"description": "Enable or disable external persistent storage. The `persistence` option must also be selected. Please note that for these to work, your DC/OS cluster MUST have been installed with the right options in `config.yaml`. Also, please note this requires a working  configuration file for the driver (e.g. `rexray.yaml`).",
										"type": "boolean",
										"default": false                    
									},
									"volume_name_influxdb": {
										"description": "Name that your volume driver uses to look up your external volume. When your task is staged on an agent, the volume driver queries the storage service for a volume with this name. If one does not exist, it is created implicitly. Otherwise, the existing volume is reused.",
										"type": "string",
										"default": "influxdb"
									},
									"provider": {
										"description": "Provider of the external persistent volume. The default value should be correct for most use cases.",
										"type": "string",
										"default": "dvdi"
									},
									"driver": {
										"description": "Volume driver to use for storage. The default value should be correct for most use cases.",
										"type": "string",
										"default": "rexray"
									}
								}
						}
					}
				}
			}
		},
		"networking": {
			"type": "object",
			"description": "influxdb networking configuration properties",
			"properties": {    
				"port": {
					"description": "Port number to be used for administration internally to the cluster.",
					"type": "number",
					"default": 8083
				},
  				"port_api": {
					"description": "Port number to be used for api communication internally to the cluster.",
					"type": "number",
					"default": 8086
				},
				"external_access": {
					"type": "object",
					"description": "Enable access from outside the cluster through Marathon-LB.\nNOTE: this connection is unencrypted.",
						"properties": {    
							"enable": {
								"description": "Enable or disable creating a VIP for external access through a public node running Marathon-LB.",
								"type": "boolean",
								"default": false                    
							},
							"external_access_port": {
								"description": "For external access, port number to be used for clear communication in the external Marathon-LB load balancer",
								"type": "number",
								"default": 18083
							}
						}
					}
			}      
		}
	}
}
