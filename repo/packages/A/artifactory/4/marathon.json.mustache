{
"id": "{{service.name}}{{#enterprise.enabled}}{{#enterprise.secondary.enabled}}-secondary{{/enterprise.secondary.enabled}}{{/enterprise.enabled}}",
"cpus": {{service.cpus}},
"mem": {{service.mem}},
{{#enterprise.enabled}}
    {{^enterprise.secondary.enabled}}
        "instances": 1,
    {{/enterprise.secondary.enabled}}
    {{#enterprise.secondary.enabled}}
        "instances": {{enterprise.secondary.nodes}},
    {{/enterprise.secondary.enabled}}
{{/enterprise.enabled}}
"container": {
"type": "DOCKER",
"docker": {
    "image": "{{resource.assets.container.docker.artifactory}}",
{{#storage.persistence.enable}}
    {{#storage.persistence.external.enable}}
        "privileged": true,
    {{/storage.persistence.external.enable}}
{{/storage.persistence.enable}}
    "network": "BRIDGE",
    "portMappings": [
    {{#enterprise.enabled}}
    {
        "containerPort": 10002,
        "hostPort": 0,
        "protocol": "tcp",
        "name": "member"
    },
    {{/enterprise.enabled}}
    {
        "containerPort": 8081,
        "hostPort": 0,
        "protocol": "tcp",
        "name": "instance"
    }]
},
"volumes": [
{{^storage.persistence.enable}}
    {
    "containerPath": "/var/opt/jfrog/artifactory",
    "hostPath": "{{storage.host_volume}}{{#enterprise.enabled}}{{#enterprise.secondary.enabled}}-secondary{{/enterprise.secondary.enabled}}{{/enterprise.enabled}}",
    "mode": "RW"
    }
{{/storage.persistence.enable}}
{{#storage.persistence.enable}}
    {{^storage.persistence.external.enable}}
        {
        "containerPath": "{{service.name}}-home",
        "mode": "RW",
        "persistent": {
        "size": {{storage.persistence.volume_size}},
        "type": "root"
        }
        },
        {
        "containerPath": "/var/opt/jfrog/artifactory",
        "hostPath": "{{service.name}}-home",
        "mode": "RW"
        }
    {{/storage.persistence.external.enable}}
    {{#storage.persistence.external.enable}}
        {
        "containerPath": "/var/opt/jfrog/artifactory",
        "external": {
        "name": "{{storage.persistence.external.volume_name}}",
        "provider": "{{storage.persistence.external.provider}}",
        "options": { "dvdi/driver": "{{storage.persistence.external.driver}}" }
        },
        "mode": "RW"
        }
    {{/storage.persistence.external.enable}}
{{/storage.persistence.enable}}
]
},
"portDefinitions": [
    {
        "port": 0,
        "protocol": "tcp",
        "name": "instance"
    }
{{#enterprise.enabled}}
    ,
    {
        "port": 0,
        "protocol": "tcp",
        "name": "member"
    }
{{/enterprise.enabled}}
],
"env": {
"ART_LICENSES": "{{service.licenses}}",
"DB_TYPE": "{{database.type}}",
"DB_HOST": "{{database.host}}",
"DB_PORT": "{{database.port}}",
"DB_URL": "{{database.url}}",
"DB_USER": "{{database.user}}",
"DB_PASSWORD": "{{database.password}}"
{{#enterprise.enabled}}
    ,
    "HA_DATA_DIR": "/var/opt/jfrog/artifactory/data",
    "HA_BACKUP_DIR": "/var/opt/jfrog/artifactory/backup",
    {{^enterprise.secondary.enabled}}
        "HA_IS_PRIMARY": "true"
    {{/enterprise.secondary.enabled}}
    {{#enterprise.secondary.enabled}}
        "ART_PRIMARY_SERVICE_NAME": "{{enterprise.secondary.name}}",
        "HA_IS_PRIMARY": "false"
    {{/enterprise.secondary.enabled}}
{{/enterprise.enabled}}
},
"labels": {
{{^enterprise.secondary.enabled}}
    "MARATHON_SINGLE_INSTANCE_APP": "true",
{{/enterprise.secondary.enabled}}
"DCOS_SERVICE_NAME": "{{service.name}}"
},
"upgradeStrategy":{
    "minimumHealthCapacity": 0,
    "maximumOverCapacity": 0,
    "constraints": [["hostname", "UNIQUE"]]
},
{{#pro.pinned-hostname}}
    "constraints": [["hostname", "CLUSTER", "{{pro.pinned-hostname}}"]],
{{/pro.pinned-hostname}}
{{#enterprise.enabled}}
    {{#enterprise.secondary.unique-nodes}}
        "constraints": [["hostname", "UNIQUE"]],
    {{/enterprise.secondary.unique-nodes}}
{{/enterprise.enabled}}
{{#enterprise.enabled}}
    {{^enterprise.secondary.enabled}}
    "cmd": "echo -n \"$ART_LICENSES\" | tr \",\" \"\n\" >> /artifactory_extra_conf/artifactory.cluster.license && export ARTIFACTORY_MASTER_KEY={{enterprise.master_key}} && export HA_MEMBERSHIP_PORT=$PORT0 && export HA_HOST_IP=$LIBPROCESS_IP && export HA_CONTEXT_URL=http://$HA_HOST_IP:$PORT1/artifactory && curl https://raw.githubusercontent.com/jfrog/artifactory-user-plugins/master/ha/inactiveServerCleaner/inactiveServerCleaner.groovy -o /tmp/plugins/inactiveServerCleaner.groovy && curl https://raw.githubusercontent.com/jfrog/artifactory-docker-examples/master/files/binarystore.xml -o /artifactory_extra_conf/binarystore.xml && rm -fr /var/opt/jfrog/artifactory/* && /entrypoint-artifactory.sh",
    {{/enterprise.secondary.enabled}}
    {{#enterprise.secondary.enabled}}
    "cmd": "apt-get update && apt-get install dnsutils -y && export ART_PORT=$(dig srv _{{enterprise.secondary.name}}._tcp.marathon.mesos +short | sort | tail -1 | awk '{print $3}') && echo -n \"$ART_LICENSES\" | tr \",\" \"\n\" >> /artifactory_extra_conf/artifactory.cluster.license && export ARTIFACTORY_MASTER_KEY={{enterprise.master_key}} && export HA_MEMBERSHIP_PORT=$PORT0 && export HA_HOST_IP=$LIBPROCESS_IP && export HA_CONTEXT_URL=http://$HA_HOST_IP:$PORT1/artifactory && export ART_PRIMARY_BASE_URL=http://{{enterprise.secondary.name}}.marathon.mesos:$ART_PORT/artifactory && curl https://raw.githubusercontent.com/jfrog/artifactory-docker-examples/master/files/binarystore.xml -o /artifactory_extra_conf/binarystore.xml && rm -fr /var/opt/jfrog/artifactory/* && /entrypoint-artifactory.sh",
    {{/enterprise.secondary.enabled}}
{{/enterprise.enabled}}
"healthChecks": [
{
"gracePeriodSeconds": 120,
"intervalSeconds": 10,
"maxConsecutiveFailures": 3,
"path": "/artifactory/webapp/#/login",
{{#enterprise.enabled}}
"portIndex": 1,
{{/enterprise.enabled}}
{{^enterprise.enabled}}
"portIndex": 0,
{{/enterprise.enabled}}
"protocol": "HTTP",
"timeoutSeconds": 10
}
]
}
